#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'

require File.dirname(__FILE__) + '/parser.rex.rb'

module SQLParser
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 325)

def self.parse(sql)
  new.scan_str(sql)
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    43,    69,   220,   143,   213,    89,    89,   101,    64,   224,
     7,   128,   129,     8,   124,   225,   136,   215,    43,   216,
   217,   218,    83,    82,   150,    67,    68,   137,   138,    66,
    66,   147,    18,   183,    70,   139,    43,    66,    66,   218,
    46,    47,    66,    31,    44,    35,    37,    38,    39,    40,
    18,    48,   142,    51,    46,    47,    59,   133,    46,    47,
   163,    31,    44,    35,    37,    38,    39,    40,    18,    48,
    43,    51,   164,    26,   165,   166,    46,    47,     8,    31,
    44,    35,    37,    38,    39,    40,   167,    48,    43,    51,
    94,    26,   168,   169,    92,    93,   171,    14,    93,   172,
   126,    59,    18,    95,    59,    97,    98,   178,    99,   100,
    46,    47,   179,    31,    44,    35,    37,    38,    39,    40,
    18,    48,    43,    51,   125,    26,   183,   120,    46,    47,
     8,    31,    44,    35,    37,    38,    39,    40,   195,    48,
    43,    51,   198,   218,    66,   112,   201,   202,    66,    59,
    18,   212,   104,   112,    18,    84,    81,    80,    43,   135,
    79,   218,    46,    47,  -140,    31,    44,    35,    37,    38,
    39,    40,    18,    48,    78,    51,    77,    76,    75,    74,
    46,    47,    73,    31,    44,    35,    37,    38,    39,    40,
    18,    48,    43,    51,     8,   143,   -79,    63,    46,    47,
    62,    31,    44,    35,    37,    38,    39,    40,   235,    48,
    43,    51,   183,    26,   236,   198,   150,    59,   220,    53,
    52,   240,    12,   147,    18,   242,   183,    66,    43,    18,
   247,    26,    46,    47,    11,    31,    44,    35,    37,    38,
    39,    40,    18,    48,   249,    51,   250,   251,     9,    66,
    46,    47,   nil,    31,    44,    35,    37,    38,    39,    40,
    18,    48,    43,    51,   nil,   143,   nil,   nil,    46,    47,
   nil,    31,    44,    35,    37,    38,    39,    40,   nil,    48,
    43,    51,    94,    26,   nil,   nil,   150,   nil,   nil,   nil,
   nil,   nil,   nil,   147,    18,    95,   nil,    97,    98,   nil,
    99,   100,    46,    47,   nil,    31,    44,    35,    37,    38,
    39,    40,    18,    48,    43,    51,   nil,   143,   nil,   nil,
    46,    47,     8,    31,    44,    35,    37,    38,    39,    40,
   nil,    48,    43,    51,   nil,    26,   nil,   nil,   150,   nil,
   nil,   nil,   nil,   nil,   nil,   147,    18,   nil,   nil,   nil,
    43,   nil,   nil,    26,    46,    47,   nil,    31,    44,    35,
    37,    38,    39,    40,    18,    48,   nil,    51,    43,   nil,
   nil,   218,   nil,   nil,   nil,    31,    44,    35,    37,    38,
    39,    40,    18,    48,   nil,    51,    43,   nil,   nil,   218,
    46,    47,   nil,    31,    44,    35,    37,    38,    39,    40,
    18,    48,   nil,    51,    43,   nil,   nil,   218,    46,    47,
   nil,    31,    44,    35,    37,    38,    39,    40,    18,    48,
   nil,    51,    43,   nil,   nil,   218,    46,    47,   nil,    31,
    44,    35,    37,    38,    39,    40,    18,    48,   nil,    51,
    43,   nil,   nil,   218,    46,    47,   nil,    31,    44,    35,
    37,    38,    39,    40,    18,    48,   nil,    51,    43,   nil,
   nil,   218,    46,    47,   nil,    31,    44,    35,    37,    38,
    39,    40,    18,    48,   nil,    51,    43,   nil,   nil,    26,
    46,    47,   nil,    31,    44,    35,    37,    38,    39,    40,
    18,    48,   nil,    51,    43,   nil,   nil,   218,    46,    47,
   nil,    31,    44,    35,    37,    38,    39,    40,    18,    48,
   nil,    51,    43,   nil,   nil,   218,    46,    47,   nil,    31,
    44,    35,    37,    38,    39,    40,    18,    48,   nil,    51,
    43,   nil,   nil,    26,    46,    47,   nil,    31,    44,    35,
    37,    38,    39,    40,    18,    48,   nil,    51,    43,   nil,
   nil,    26,    46,    47,   nil,    31,    44,    35,    37,    38,
    39,    40,    18,    48,   nil,    51,    43,   nil,   nil,    26,
    46,    47,   nil,    31,    44,    35,    37,    38,    39,    40,
    18,    48,   nil,    51,    43,   nil,   nil,    26,    46,    47,
   nil,    31,    44,    35,    37,    38,    39,    40,    18,    48,
   nil,    51,   nil,   nil,   nil,   nil,    46,    47,   nil,    31,
    44,    35,    37,    38,    39,    40,    18,    48,    43,    51,
   nil,   143,   nil,   nil,    46,    47,   nil,    31,    44,    35,
    37,    38,    39,    40,   nil,    48,    43,    51,   nil,    26,
   nil,   nil,   nil,   nil,   nil,   114,   nil,   nil,   nil,   147,
    18,   nil,   nil,   nil,    43,   nil,   nil,    26,    46,    47,
   nil,    31,    44,    35,    37,    38,    39,    40,    18,    48,
   nil,    51,   nil,   nil,   nil,   nil,    46,    47,   nil,    31,
    44,    35,    37,    38,    39,    40,    18,    48,    43,    51,
   nil,   143,   nil,   nil,    46,    47,   nil,    31,    44,    35,
    37,    38,    39,    40,   nil,    48,    43,    51,   nil,    26,
   nil,   nil,   150,   nil,   nil,   nil,   nil,   nil,   nil,   147,
    18,   nil,   nil,   nil,    43,   nil,   nil,    26,    46,    47,
   nil,    31,    44,    35,    37,    38,    39,    40,    18,    48,
   nil,    51,    43,   nil,   nil,    26,    46,    47,   nil,    31,
    44,    35,    37,    38,    39,    40,    18,    48,   nil,    51,
    43,   nil,   nil,    26,    46,    47,   nil,    31,    44,    35,
    37,    38,    39,    40,    18,    48,   nil,    51,   nil,   nil,
   nil,   nil,    46,    47,   nil,    31,    44,    35,    37,    38,
    39,    40,    18,    48,    43,    51,   nil,   143,   nil,   nil,
    46,    47,   nil,    31,    44,    35,    37,    38,    39,    40,
   nil,    48,   nil,    51,   nil,   nil,   nil,   nil,   150,   nil,
   nil,   nil,   nil,   nil,   nil,   147,    18,   nil,   nil,   nil,
   nil,   nil,   nil,    94,    46,    47,   nil,    31,    44,    35,
    37,    38,    39,    40,   nil,    48,    95,    51,    97,    98,
   nil,    99,   100,   206,   207,   184,   185,   nil,   186,   187,
   188,   nil,   nil,   nil,   nil,   189,   190,   191,   192,   193,
   194 ]

racc_action_check = [
   104,    20,   186,   104,   181,    53,   126,    55,    17,   188,
     0,    87,    87,     0,    81,   188,    96,   184,   247,   184,
   184,   247,    48,    48,   104,    19,    19,    98,    99,    55,
    17,   104,   104,   181,    20,   100,   240,    53,   126,   240,
   104,   104,   101,   104,   104,   104,   104,   104,   104,   104,
   247,   104,   103,   104,    81,    81,    94,    93,   247,   247,
   114,   247,   247,   247,   247,   247,   247,   247,   240,   247,
   220,   247,   115,   220,   116,   117,   240,   240,   220,   240,
   240,   240,   240,   240,   240,   240,   118,   240,     8,   240,
    54,     8,   119,   123,    54,    91,   131,     8,    54,   132,
    85,   135,   220,    54,   136,    54,    54,   141,    54,    54,
   220,   220,   142,   220,   220,   220,   220,   220,   220,   220,
     8,   220,   218,   220,    82,   218,   144,    79,     8,     8,
   218,     8,     8,     8,     8,     8,     8,     8,   147,     8,
   217,     8,   148,   217,    73,    72,   173,   174,    64,    62,
   179,   180,    61,   182,   218,    51,    45,    44,   215,    95,
    43,   215,   218,   218,    41,   218,   218,   218,   218,   218,
   218,   218,   217,   218,    40,   218,    39,    38,    37,    35,
   217,   217,    32,   217,   217,   217,   217,   217,   217,   217,
   215,   217,   206,   217,   195,   206,    18,    16,   215,   215,
    13,   215,   215,   215,   215,   215,   215,   215,   207,   215,
   202,   215,   208,   202,   209,   214,   206,    12,   216,    11,
     9,   219,     7,   206,   206,   224,   234,   235,    92,   236,
   237,    92,   206,   206,     5,   206,   206,   206,   206,   206,
   206,   206,   202,   206,   241,   206,   243,   244,     1,   251,
   202,   202,   nil,   202,   202,   202,   202,   202,   202,   202,
    92,   202,   198,   202,   nil,   198,   nil,   nil,    92,    92,
   nil,    92,    92,    92,    92,    92,    92,    92,   nil,    92,
   133,    92,   105,   133,   nil,   nil,   198,   nil,   nil,   nil,
   nil,   nil,   nil,   198,   198,   105,   nil,   105,   105,   nil,
   105,   105,   198,   198,   nil,   198,   198,   198,   198,   198,
   198,   198,   133,   198,   143,   198,   nil,   143,   nil,   nil,
   133,   133,   143,   133,   133,   133,   133,   133,   133,   133,
   nil,   133,    21,   133,   nil,    21,   nil,   nil,   143,   nil,
   nil,   nil,   nil,   nil,   nil,   143,   143,   nil,   nil,   nil,
    26,   nil,   nil,    26,   143,   143,   nil,   143,   143,   143,
   143,   143,   143,   143,    21,   143,   nil,   143,   194,   nil,
   nil,   194,   nil,   nil,   nil,    21,    21,    21,    21,    21,
    21,    21,    26,    21,   nil,    21,   193,   nil,   nil,   193,
    26,    26,   nil,    26,    26,    26,    26,    26,    26,    26,
   194,    26,   nil,    26,   192,   nil,   nil,   192,   194,   194,
   nil,   194,   194,   194,   194,   194,   194,   194,   193,   194,
   nil,   194,   191,   nil,   nil,   191,   193,   193,   nil,   193,
   193,   193,   193,   193,   193,   193,   192,   193,   nil,   193,
   190,   nil,   nil,   190,   192,   192,   nil,   192,   192,   192,
   192,   192,   192,   192,   191,   192,   nil,   192,   189,   nil,
   nil,   189,   191,   191,   nil,   191,   191,   191,   191,   191,
   191,   191,   190,   191,   nil,   191,    78,   nil,   nil,    78,
   190,   190,   nil,   190,   190,   190,   190,   190,   190,   190,
   189,   190,   nil,   190,   187,   nil,   nil,   187,   189,   189,
   nil,   189,   189,   189,   189,   189,   189,   189,    78,   189,
   nil,   189,   185,   nil,   nil,   185,    78,    78,   nil,    78,
    78,    78,    78,    78,    78,    78,   187,    78,   nil,    78,
    77,   nil,   nil,    77,   187,   187,   nil,   187,   187,   187,
   187,   187,   187,   187,   185,   187,   nil,   187,    76,   nil,
   nil,    76,   185,   185,   nil,   185,   185,   185,   185,   185,
   185,   185,    77,   185,   nil,   185,    69,   nil,   nil,    69,
    77,    77,   nil,    77,    77,    77,    77,    77,    77,    77,
    76,    77,   nil,    77,    75,   nil,   nil,    75,    76,    76,
   nil,    76,    76,    76,    76,    76,    76,    76,    69,    76,
   nil,    76,   nil,   nil,   nil,   nil,    69,    69,   nil,    69,
    69,    69,    69,    69,    69,    69,    75,    69,   150,    69,
   nil,   150,   nil,   nil,    75,    75,   nil,    75,    75,    75,
    75,    75,    75,    75,   nil,    75,    74,    75,   nil,    74,
   nil,   nil,   nil,   nil,   nil,    74,   nil,   nil,   nil,   150,
   150,   nil,   nil,   nil,   172,   nil,   nil,   172,   150,   150,
   nil,   150,   150,   150,   150,   150,   150,   150,    74,   150,
   nil,   150,   nil,   nil,   nil,   nil,    74,    74,   nil,    74,
    74,    74,    74,    74,    74,    74,   172,    74,   178,    74,
   nil,   178,   nil,   nil,   172,   172,   nil,   172,   172,   172,
   172,   172,   172,   172,   nil,   172,    63,   172,   nil,    63,
   nil,   nil,   178,   nil,   nil,   nil,   nil,   nil,   nil,   178,
   178,   nil,   nil,   nil,    70,   nil,   nil,    70,   178,   178,
   nil,   178,   178,   178,   178,   178,   178,   178,    63,   178,
   nil,   178,    67,   nil,   nil,    67,    63,    63,   nil,    63,
    63,    63,    63,    63,    63,    63,    70,    63,   nil,    63,
    68,   nil,   nil,    68,    70,    70,   nil,    70,    70,    70,
    70,    70,    70,    70,    67,    70,   nil,    70,   nil,   nil,
   nil,   nil,    67,    67,   nil,    67,    67,    67,    67,    67,
    67,    67,    68,    67,   183,    67,   nil,   183,   nil,   nil,
    68,    68,   nil,    68,    68,    68,    68,    68,    68,    68,
   nil,    68,   nil,    68,   nil,   nil,   nil,   nil,   183,   nil,
   nil,   nil,   nil,   nil,   nil,   183,   183,   nil,   nil,   nil,
   nil,   nil,   nil,   176,   183,   183,   nil,   183,   183,   183,
   183,   183,   183,   183,   nil,   183,   176,   183,   176,   176,
   nil,   176,   176,   176,   176,   146,   146,   nil,   146,   146,
   146,   nil,   nil,   nil,   nil,   146,   146,   146,   146,   146,
   146 ]

racc_action_pointer = [
     0,   248,   nil,   nil,   nil,   232,   nil,   211,    83,   220,
   nil,   216,   180,   184,   nil,   nil,   193,    -7,   147,   -20,
   -13,   327,   nil,   nil,   nil,   nil,   345,   nil,   nil,   nil,
   nil,   nil,   133,   nil,   nil,   171,   nil,   170,   169,   168,
   166,   109,   nil,   111,   152,   101,   nil,   nil,   -34,   nil,
   nil,    96,   nil,     0,    86,    -8,   nil,   nil,   nil,   nil,
   nil,   126,   112,   701,   111,   nil,   nil,   737,   755,   561,
   719,   nil,   136,   107,   631,   579,   543,   525,   471,   122,
   nil,     9,    68,   nil,   nil,    96,   nil,     5,   nil,   nil,
   nil,    83,   223,    49,    19,   141,    -2,   nil,     6,     7,
    14,     5,   nil,    25,    -5,   278,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    51,    63,    65,    66,    77,    83,
   nil,   nil,   nil,    88,   nil,   nil,     1,   nil,   nil,   nil,
   nil,    87,    95,   275,   nil,    64,    67,   nil,   nil,   nil,
   nil,    79,   109,   309,    88,   nil,   826,   130,   111,   nil,
   613,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   649,   137,   143,   nil,   829,   nil,   683,   113,
   142,    -5,   144,   789,   -13,   507,    -6,   489,   -20,   453,
   435,   417,   399,   381,   363,   181,   nil,   nil,   257,   nil,
   nil,   nil,   205,   nil,   nil,   nil,   187,   200,   174,   210,
   nil,   nil,   nil,   nil,   184,   153,   210,   135,   117,   190,
    65,   nil,   nil,   nil,   190,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   188,   190,   192,   199,   nil,   nil,
    31,   235,   nil,   237,   243,   nil,   nil,    13,   nil,   nil,
   nil,   212,   nil,   nil ]

racc_action_default = [
  -152,  -152,    -1,    -2,    -3,    -5,   -16,  -152,  -152,  -152,
    -4,  -152,  -152,   -24,   -25,   -26,   -28,   -31,  -146,  -108,
  -111,  -152,  -113,  -114,  -115,  -116,  -152,  -118,  -119,  -120,
  -121,  -122,  -152,  -124,  -125,  -152,  -127,  -152,  -152,  -152,
  -152,  -133,  -134,  -138,  -152,  -152,  -144,  -145,  -152,  -149,
  -150,  -152,   254,  -152,  -152,   -36,   -37,   -39,   -40,   -79,
   -23,   -56,  -152,  -152,  -152,   -30,  -146,  -152,  -152,  -152,
  -152,  -112,  -152,  -152,  -152,  -152,  -152,  -152,  -152,  -136,
  -137,  -152,  -152,  -148,  -151,    -6,    -8,   -12,   -10,   -11,
   -17,  -152,  -152,  -152,  -152,  -152,  -152,   -44,   -46,   -48,
   -49,  -152,   -35,   -58,  -152,   -33,   -27,   -29,  -106,  -107,
  -109,  -110,  -117,  -123,  -152,  -152,  -152,  -152,  -152,  -152,
  -135,  -139,  -141,  -152,  -143,  -147,  -152,    -9,   -13,   -14,
   -18,  -152,   -21,  -152,   -41,  -152,  -152,   -45,   -47,   -50,
   -34,   -63,  -152,  -152,   -57,   -65,  -152,  -152,   -82,   -84,
  -152,   -87,   -88,   -89,   -91,   -92,   -93,   -94,   -95,   -96,
  -103,  -104,  -105,  -126,  -128,  -129,  -130,  -131,  -132,  -142,
    -7,   -19,  -152,  -152,   -73,   -42,  -152,   -32,  -152,  -152,
  -152,  -152,  -105,  -152,  -152,  -152,  -152,  -152,  -152,  -152,
  -152,  -152,  -152,  -152,  -152,  -152,   -38,   -78,  -152,   -86,
   -20,   -22,  -152,   -43,   -51,   -52,  -152,  -152,   -64,   -59,
   -61,   -62,   -15,   -90,   -83,  -152,  -152,  -152,  -152,  -152,
  -152,   -69,   -70,   -75,  -152,   -77,   -97,   -98,   -99,  -100,
  -101,  -102,   -85,   -72,   -53,  -152,  -152,  -152,   -68,   -74,
  -152,  -152,   -76,  -152,   -55,   -81,   -60,  -152,   -67,   -71,
   -54,  -152,   -66,   -80 ]

racc_goto_table = [
    65,    55,    17,   144,    54,   173,    86,   131,   211,   196,
   210,    15,    90,   221,   110,   111,   141,    13,    60,   127,
    72,    61,   103,    91,   177,     1,   197,   203,   204,   205,
    85,   243,   244,   209,    10,     5,    88,     4,   102,     3,
   214,   232,   181,   238,   199,     2,   123,   107,   196,   130,
    71,    55,   121,   122,   105,   nil,   113,    17,   nil,   nil,
   nil,   108,   109,   nil,   nil,   211,   106,   246,   115,   116,
   117,   118,   119,   nil,   233,   nil,   nil,   208,   196,   170,
   nil,   nil,   nil,   134,   140,   nil,   132,   200,   nil,   219,
   nil,   223,   241,   226,   227,   228,   229,   230,   231,   nil,
   nil,   nil,   nil,   nil,   nil,   234,   nil,   nil,   nil,    88,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   237,
   nil,   239,   nil,   nil,   175,    55,   nil,   174,   176,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   182,   nil,   nil,
   nil,   nil,   nil,   nil,   248,   nil,   nil,   nil,   nil,   nil,
   nil,   252,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   132,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   174,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    72,   nil,   174,   nil,   nil,   nil,   245,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   253 ]

racc_goto_check = [
    11,    28,    18,    37,    14,    19,     8,    17,    42,    12,
    41,    22,    15,    47,    58,    58,    26,    20,    21,    10,
    18,    24,    25,    16,    27,     1,    30,    34,    35,    36,
     7,    38,    39,    40,     6,     5,    11,     4,    11,     3,
    51,    52,    37,    47,    53,     2,    60,    11,    12,    15,
    61,    28,    73,    74,    14,   nil,    11,    18,   nil,   nil,
   nil,    18,    18,   nil,   nil,    42,    22,    41,    18,    18,
    18,    18,    18,   nil,    19,   nil,   nil,    37,    12,     8,
   nil,   nil,   nil,    28,    11,   nil,    18,    17,   nil,    45,
   nil,    45,    19,    45,    45,    45,    45,    45,    45,   nil,
   nil,   nil,   nil,   nil,   nil,    37,   nil,   nil,   nil,    11,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    45,
   nil,    45,   nil,   nil,    28,    28,   nil,    18,    14,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    18,   nil,   nil,
   nil,   nil,   nil,   nil,    45,   nil,   nil,   nil,   nil,   nil,
   nil,    45,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    18,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    18,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    18,   nil,    18,   nil,   nil,   nil,    11,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    11 ]

racc_goto_pointer = [
   nil,    25,    45,    39,    37,    35,    29,   -23,   -47,   nil,
   -68,   -17,  -138,   nil,    -8,   -42,   -31,   -85,    -6,  -128,
     9,     5,     3,   nil,     8,   -39,   -87,  -117,   -11,   nil,
  -121,   nil,   nil,   nil,  -149,  -148,  -147,  -101,  -204,  -203,
  -146,  -169,  -171,   nil,   nil,   -96,   nil,  -173,   nil,   nil,
   nil,  -143,  -157,  -106,   nil,   nil,   nil,   nil,   -55,   nil,
   -35,    29,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   -29,   -28,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   180,   nil,   nil,   nil,    87,
   nil,    33,   145,     6,   nil,   nil,   nil,   nil,   162,   nil,
   nil,   nil,   nil,    16,   nil,   nil,   nil,   nil,    34,    56,
   222,    57,    58,    96,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    24,   161,   155,   146,   156,   nil,   157,   158,
   159,   148,   149,   151,   152,   153,   154,   160,    19,    20,
    21,    22,    23,    25,    27,    28,    29,    30,    32,    36,
    41,    42,    45,   nil,   nil,    49,    50 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 61, :_reduce_none,
  1, 62, :_reduce_none,
  1, 62, :_reduce_none,
  2, 63, :_reduce_4,
  0, 66, :_reduce_none,
  3, 66, :_reduce_6,
  3, 67, :_reduce_7,
  1, 67, :_reduce_none,
  2, 68, :_reduce_9,
  1, 69, :_reduce_none,
  1, 69, :_reduce_11,
  0, 70, :_reduce_12,
  1, 70, :_reduce_13,
  1, 70, :_reduce_14,
  3, 72, :_reduce_15,
  1, 65, :_reduce_none,
  4, 64, :_reduce_17,
  5, 64, :_reduce_18,
  3, 76, :_reduce_19,
  3, 77, :_reduce_20,
  1, 77, :_reduce_none,
  4, 75, :_reduce_22,
  3, 73, :_reduce_23,
  2, 73, :_reduce_24,
  1, 80, :_reduce_25,
  1, 80, :_reduce_26,
  3, 82, :_reduce_27,
  1, 82, :_reduce_none,
  3, 83, :_reduce_29,
  2, 83, :_reduce_30,
  1, 83, :_reduce_none,
  4, 81, :_reduce_32,
  2, 84, :_reduce_33,
  3, 74, :_reduce_34,
  2, 74, :_reduce_35,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 90, :_reduce_none,
  1, 89, :_reduce_none,
  1, 89, :_reduce_none,
  3, 91, :_reduce_41,
  4, 91, :_reduce_42,
  5, 92, :_reduce_43,
  1, 93, :_reduce_44,
  2, 93, :_reduce_45,
  1, 93, :_reduce_46,
  2, 93, :_reduce_47,
  1, 93, :_reduce_48,
  1, 93, :_reduce_49,
  2, 93, :_reduce_50,
  1, 94, :_reduce_none,
  1, 94, :_reduce_none,
  2, 95, :_reduce_53,
  4, 96, :_reduce_54,
  1, 98, :_reduce_none,
  0, 85, :_reduce_none,
  2, 85, :_reduce_57,
  0, 86, :_reduce_none,
  3, 86, :_reduce_59,
  3, 100, :_reduce_60,
  1, 100, :_reduce_none,
  1, 101, :_reduce_none,
  0, 87, :_reduce_none,
  2, 87, :_reduce_64,
  1, 103, :_reduce_none,
  6, 104, :_reduce_66,
  5, 104, :_reduce_67,
  4, 106, :_reduce_68,
  3, 106, :_reduce_69,
  1, 107, :_reduce_none,
  3, 107, :_reduce_71,
  3, 79, :_reduce_72,
  1, 79, :_reduce_none,
  4, 108, :_reduce_74,
  3, 108, :_reduce_75,
  4, 109, :_reduce_76,
  3, 109, :_reduce_77,
  2, 110, :_reduce_78,
  1, 88, :_reduce_79,
  3, 99, :_reduce_80,
  1, 99, :_reduce_none,
  1, 97, :_reduce_none,
  3, 97, :_reduce_83,
  1, 111, :_reduce_none,
  3, 111, :_reduce_85,
  2, 112, :_reduce_86,
  1, 112, :_reduce_none,
  1, 113, :_reduce_none,
  1, 114, :_reduce_none,
  3, 114, :_reduce_90,
  1, 115, :_reduce_none,
  1, 115, :_reduce_none,
  1, 115, :_reduce_none,
  1, 115, :_reduce_none,
  1, 115, :_reduce_none,
  1, 115, :_reduce_none,
  3, 116, :_reduce_97,
  3, 116, :_reduce_98,
  3, 116, :_reduce_99,
  3, 116, :_reduce_100,
  3, 116, :_reduce_101,
  3, 116, :_reduce_102,
  1, 105, :_reduce_none,
  1, 105, :_reduce_none,
  1, 117, :_reduce_none,
  3, 78, :_reduce_106,
  3, 78, :_reduce_107,
  1, 78, :_reduce_none,
  3, 118, :_reduce_109,
  3, 118, :_reduce_110,
  1, 118, :_reduce_none,
  2, 119, :_reduce_112,
  1, 119, :_reduce_none,
  1, 121, :_reduce_none,
  1, 121, :_reduce_none,
  1, 121, :_reduce_none,
  3, 121, :_reduce_117,
  1, 122, :_reduce_none,
  1, 122, :_reduce_none,
  1, 124, :_reduce_none,
  1, 124, :_reduce_none,
  1, 125, :_reduce_122,
  3, 102, :_reduce_123,
  1, 102, :_reduce_none,
  1, 128, :_reduce_none,
  4, 123, :_reduce_126,
  1, 123, :_reduce_none,
  4, 129, :_reduce_128,
  4, 129, :_reduce_129,
  4, 129, :_reduce_130,
  4, 129, :_reduce_131,
  4, 129, :_reduce_132,
  1, 126, :_reduce_none,
  1, 126, :_reduce_none,
  3, 130, :_reduce_135,
  2, 130, :_reduce_136,
  2, 130, :_reduce_137,
  1, 130, :_reduce_138,
  3, 131, :_reduce_139,
  1, 132, :_reduce_none,
  1, 133, :_reduce_none,
  2, 134, :_reduce_142,
  1, 134, :_reduce_143,
  1, 120, :_reduce_144,
  1, 120, :_reduce_145,
  1, 71, :_reduce_146,
  3, 127, :_reduce_147,
  2, 127, :_reduce_148,
  1, 127, :_reduce_none,
  1, 135, :_reduce_none,
  2, 136, :_reduce_151 ]

racc_reduce_n = 152

racc_shift_n = 254

racc_token_table = {
  false => 0,
  :error => 1,
  :ORDER => 2,
  :BY => 3,
  :comma => 4,
  :unsigned_integer => 5,
  :ASC => 6,
  :DESC => 7,
  :left_paren => 8,
  :right_paren => 9,
  :INSERT => 10,
  :INTO => 11,
  :VALUES => 12,
  :SELECT => 13,
  :asterisk => 14,
  :AS => 15,
  :FROM => 16,
  :CROSS => 17,
  :JOIN => 18,
  :INNER => 19,
  :LEFT => 20,
  :OUTER => 21,
  :RIGHT => 22,
  :FULL => 23,
  :ON => 24,
  :USING => 25,
  :WHERE => 26,
  :GROUP => 27,
  :HAVING => 28,
  :NOT => 29,
  :BETWEEN => 30,
  :AND => 31,
  :IN => 32,
  :LIKE => 33,
  :IS => 34,
  :NULL => 35,
  :EXISTS => 36,
  :identifier => 37,
  :OR => 38,
  :equals_operator => 39,
  :not_equals_operator => 40,
  :less_than_operator => 41,
  :greater_than_operator => 42,
  :less_than_or_equals_operator => 43,
  :greater_than_or_equals_operator => 44,
  :plus_sign => 45,
  :minus_sign => 46,
  :solidus => 47,
  :CURRENT_USER => 48,
  :period => 49,
  :COUNT => 50,
  :AVG => 51,
  :MAX => 52,
  :MIN => 53,
  :SUM => 54,
  :E => 55,
  :quote => 56,
  :character_string_literal => 57,
  :DATE => 58,
  :date_string => 59 }

racc_nt_base = 60

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "ORDER",
  "BY",
  "comma",
  "unsigned_integer",
  "ASC",
  "DESC",
  "left_paren",
  "right_paren",
  "INSERT",
  "INTO",
  "VALUES",
  "SELECT",
  "asterisk",
  "AS",
  "FROM",
  "CROSS",
  "JOIN",
  "INNER",
  "LEFT",
  "OUTER",
  "RIGHT",
  "FULL",
  "ON",
  "USING",
  "WHERE",
  "GROUP",
  "HAVING",
  "NOT",
  "BETWEEN",
  "AND",
  "IN",
  "LIKE",
  "IS",
  "NULL",
  "EXISTS",
  "identifier",
  "OR",
  "equals_operator",
  "not_equals_operator",
  "less_than_operator",
  "greater_than_operator",
  "less_than_or_equals_operator",
  "greater_than_or_equals_operator",
  "plus_sign",
  "minus_sign",
  "solidus",
  "CURRENT_USER",
  "period",
  "COUNT",
  "AVG",
  "MAX",
  "MIN",
  "SUM",
  "E",
  "quote",
  "character_string_literal",
  "DATE",
  "date_string",
  "$start",
  "direct_sql_statement",
  "direct_sql_data_statement",
  "direct_select_statement_multiple_rows",
  "insert_specification",
  "query_expression",
  "order_by_clause",
  "sort_specification_list",
  "sort_specification",
  "sort_key",
  "ordering_specification",
  "column_name",
  "subquery",
  "query_specification",
  "table_reference",
  "value_list",
  "column_list",
  "in_column_list",
  "value_expression",
  "in_value_list",
  "select_list",
  "table_expression",
  "select_sublist",
  "derived_column",
  "from_clause",
  "where_clause",
  "group_by_clause",
  "having_clause",
  "table_name",
  "joined_table",
  "table_subquery",
  "cross_join",
  "qualified_join",
  "join_type",
  "join_specification",
  "join_condition",
  "named_columns_join",
  "search_condition",
  "join_column_list",
  "column_name_list",
  "grouping_column_reference_list",
  "grouping_column_reference",
  "column_reference",
  "row_subquery",
  "between_predicate",
  "row_value_constructor",
  "in_predicate",
  "in_predicate_value",
  "like_predicate",
  "null_predicate",
  "exists_predicate",
  "boolean_term",
  "boolean_factor",
  "boolean_test",
  "boolean_primary",
  "predicate",
  "comparison_predicate",
  "row_value_constructor_element",
  "term",
  "factor",
  "sign",
  "value_expression_primary",
  "unsigned_value_specification",
  "set_function_specification",
  "unsigned_literal",
  "general_value_specification",
  "unsigned_numeric_literal",
  "general_literal",
  "qualifier",
  "general_set_function",
  "exact_numeric_literal",
  "approximate_numeric_literal",
  "mantissa",
  "exponent",
  "signed_integer",
  "datetime_literal",
  "date_literal" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

module_eval(<<'.,.,', 'parser.racc', 13)
  def _reduce_4(val, _values, result)
     result = SQLParser::Statement::DirectSelect.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 5 omitted

module_eval(<<'.,.,', 'parser.racc', 18)
  def _reduce_6(val, _values, result)
     result = SQLParser::Statement::OrderBy.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 21)
  def _reduce_7(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 8 omitted

module_eval(<<'.,.,', 'parser.racc', 25)
  def _reduce_9(val, _values, result)
     result = val[1].new(val[0]) 
    result
  end
.,.,

# reduce 10 omitted

module_eval(<<'.,.,', 'parser.racc', 29)
  def _reduce_11(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 32)
  def _reduce_12(val, _values, result)
     result = SQLParser::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 33)
  def _reduce_13(val, _values, result)
     result = SQLParser::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 34)
  def _reduce_14(val, _values, result)
     result = SQLParser::Statement::Descending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 39)
  def _reduce_15(val, _values, result)
     result = SQLParser::Statement::Subquery.new(val[1]) 
    result
  end
.,.,

# reduce 16 omitted

module_eval(<<'.,.,', 'parser.racc', 45)
  def _reduce_17(val, _values, result)
     result = SQLParser::Statement::Insert.new(val[2], nil, val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 46)
  def _reduce_18(val, _values, result)
     result = SQLParser::Statement::Insert.new(val[2], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 49)
  def _reduce_19(val, _values, result)
     result = SQLParser::Statement::InColumnList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 52)
  def _reduce_20(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 21 omitted

module_eval(<<'.,.,', 'parser.racc', 56)
  def _reduce_22(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 59)
  def _reduce_23(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 60)
  def _reduce_24(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 63)
  def _reduce_25(val, _values, result)
     result = SQLParser::Statement::All.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 64)
  def _reduce_26(val, _values, result)
     result = SQLParser::Statement::SelectList.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 67)
  def _reduce_27(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 28 omitted

module_eval(<<'.,.,', 'parser.racc', 71)
  def _reduce_29(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 72)
  def _reduce_30(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 31 omitted

module_eval(<<'.,.,', 'parser.racc', 76)
  def _reduce_32(val, _values, result)
     result = SQLParser::Statement::TableExpression.new(val[0], val[1], val[2], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 79)
  def _reduce_33(val, _values, result)
     result = SQLParser::Statement::FromClause.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 82)
  def _reduce_34(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 83)
  def _reduce_35(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 36 omitted

# reduce 37 omitted

# reduce 38 omitted

# reduce 39 omitted

# reduce 40 omitted

module_eval(<<'.,.,', 'parser.racc', 95)
  def _reduce_41(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 96)
  def _reduce_42(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 99)
  def _reduce_43(val, _values, result)
     result = val[1].new(val[0], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 102)
  def _reduce_44(val, _values, result)
     result = SQLParser::Statement::InnerJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 103)
  def _reduce_45(val, _values, result)
     result = SQLParser::Statement::LeftOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 104)
  def _reduce_46(val, _values, result)
     result = SQLParser::Statement::LeftJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 105)
  def _reduce_47(val, _values, result)
     result = SQLParser::Statement::RightOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 106)
  def _reduce_48(val, _values, result)
     result = SQLParser::Statement::RightJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 107)
  def _reduce_49(val, _values, result)
     result = SQLParser::Statement::FullJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 108)
  def _reduce_50(val, _values, result)
     result = SQLParser::Statement::FullOuterJoin 
    result
  end
.,.,

# reduce 51 omitted

# reduce 52 omitted

module_eval(<<'.,.,', 'parser.racc', 115)
  def _reduce_53(val, _values, result)
     result = SQLParser::Statement::On.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 118)
  def _reduce_54(val, _values, result)
     result = SQLParser::Statement::Using.new(val[2]) 
    result
  end
.,.,

# reduce 55 omitted

# reduce 56 omitted

module_eval(<<'.,.,', 'parser.racc', 125)
  def _reduce_57(val, _values, result)
     result = SQLParser::Statement::WhereClause.new(val[1]) 
    result
  end
.,.,

# reduce 58 omitted

module_eval(<<'.,.,', 'parser.racc', 129)
  def _reduce_59(val, _values, result)
     result = SQLParser::Statement::GroupByClause.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 132)
  def _reduce_60(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 61 omitted

# reduce 62 omitted

# reduce 63 omitted

module_eval(<<'.,.,', 'parser.racc', 140)
  def _reduce_64(val, _values, result)
     result = SQLParser::Statement::HavingClause.new(val[1]) 
    result
  end
.,.,

# reduce 65 omitted

module_eval(<<'.,.,', 'parser.racc', 147)
  def _reduce_66(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Between.new(val[0], val[3], val[5])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 148)
  def _reduce_67(val, _values, result)
     result = SQLParser::Statement::Between.new(val[0], val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 151)
  def _reduce_68(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::In.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 152)
  def _reduce_69(val, _values, result)
     result = SQLParser::Statement::In.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 70 omitted

module_eval(<<'.,.,', 'parser.racc', 156)
  def _reduce_71(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 159)
  def _reduce_72(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 73 omitted

module_eval(<<'.,.,', 'parser.racc', 166)
  def _reduce_74(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Like.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 167)
  def _reduce_75(val, _values, result)
     result = SQLParser::Statement::Like.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 170)
  def _reduce_76(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 171)
  def _reduce_77(val, _values, result)
     result = SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 174)
  def _reduce_78(val, _values, result)
     result = SQLParser::Statement::Exists.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 178)
  def _reduce_79(val, _values, result)
     result = SQLParser::Statement::Table.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 181)
  def _reduce_80(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 81 omitted

# reduce 82 omitted

module_eval(<<'.,.,', 'parser.racc', 187)
  def _reduce_83(val, _values, result)
     result = SQLParser::Statement::Or.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 84 omitted

module_eval(<<'.,.,', 'parser.racc', 191)
  def _reduce_85(val, _values, result)
     result = SQLParser::Statement::And.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 194)
  def _reduce_86(val, _values, result)
     result = SQLParser::Statement::Not.new(val[1]) 
    result
  end
.,.,

# reduce 87 omitted

# reduce 88 omitted

# reduce 89 omitted

module_eval(<<'.,.,', 'parser.racc', 202)
  def _reduce_90(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 91 omitted

# reduce 92 omitted

# reduce 93 omitted

# reduce 94 omitted

# reduce 95 omitted

# reduce 96 omitted

module_eval(<<'.,.,', 'parser.racc', 213)
  def _reduce_97(val, _values, result)
     result = SQLParser::Statement::Equals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 214)
  def _reduce_98(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Equals.new(val[0], val[2])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 215)
  def _reduce_99(val, _values, result)
     result = SQLParser::Statement::Less.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 216)
  def _reduce_100(val, _values, result)
     result = SQLParser::Statement::Greater.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 217)
  def _reduce_101(val, _values, result)
     result = SQLParser::Statement::LessOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 218)
  def _reduce_102(val, _values, result)
     result = SQLParser::Statement::GreaterOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 103 omitted

# reduce 104 omitted

# reduce 105 omitted

module_eval(<<'.,.,', 'parser.racc', 228)
  def _reduce_106(val, _values, result)
     result = SQLParser::Statement::Add.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 229)
  def _reduce_107(val, _values, result)
     result = SQLParser::Statement::Subtract.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 108 omitted

module_eval(<<'.,.,', 'parser.racc', 233)
  def _reduce_109(val, _values, result)
     result = SQLParser::Statement::Multiply.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 234)
  def _reduce_110(val, _values, result)
     result = SQLParser::Statement::Divide.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 111 omitted

module_eval(<<'.,.,', 'parser.racc', 238)
  def _reduce_112(val, _values, result)
     result = val[0].new(val[1]) 
    result
  end
.,.,

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

module_eval(<<'.,.,', 'parser.racc', 245)
  def _reduce_117(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

module_eval(<<'.,.,', 'parser.racc', 256)
  def _reduce_122(val, _values, result)
     result = SQLParser::Statement::CurrentUser.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 259)
  def _reduce_123(val, _values, result)
     result = SQLParser::Statement::QualifiedColumn.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 124 omitted

# reduce 125 omitted

module_eval(<<'.,.,', 'parser.racc', 266)
  def _reduce_126(val, _values, result)
     result = SQLParser::Statement::Count.new(SQLParser::Statement::All.new) 
    result
  end
.,.,

# reduce 127 omitted

module_eval(<<'.,.,', 'parser.racc', 270)
  def _reduce_128(val, _values, result)
     result = SQLParser::Statement::Count.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 271)
  def _reduce_129(val, _values, result)
     result = SQLParser::Statement::Average.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 272)
  def _reduce_130(val, _values, result)
     result = SQLParser::Statement::Maximum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 273)
  def _reduce_131(val, _values, result)
     result = SQLParser::Statement::Minimum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 274)
  def _reduce_132(val, _values, result)
     result = SQLParser::Statement::Sum.new(val[2]) 
    result
  end
.,.,

# reduce 133 omitted

# reduce 134 omitted

module_eval(<<'.,.,', 'parser.racc', 282)
  def _reduce_135(val, _values, result)
     result = SQLParser::Statement::Float.new("#{val[0]}.#{val[2]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 283)
  def _reduce_136(val, _values, result)
     result = SQLParser::Statement::Float.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 284)
  def _reduce_137(val, _values, result)
     result = SQLParser::Statement::Float.new("0.#{val[1]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 285)
  def _reduce_138(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 288)
  def _reduce_139(val, _values, result)
     result = SQLParser::Statement::ApproximateFloat.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 140 omitted

# reduce 141 omitted

module_eval(<<'.,.,', 'parser.racc', 297)
  def _reduce_142(val, _values, result)
     result = val[0].new(SQLParser::Statement::Integer.new(val[1])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 298)
  def _reduce_143(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 301)
  def _reduce_144(val, _values, result)
     result = SQLParser::Statement::UnaryPlus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 302)
  def _reduce_145(val, _values, result)
     result = SQLParser::Statement::UnaryMinus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 306)
  def _reduce_146(val, _values, result)
     result = SQLParser::Statement::Column.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 310)
  def _reduce_147(val, _values, result)
     result = SQLParser::Statement::String.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 311)
  def _reduce_148(val, _values, result)
     result = SQLParser::Statement::String.new('') 
    result
  end
.,.,

# reduce 149 omitted

# reduce 150 omitted

module_eval(<<'.,.,', 'parser.racc', 318)
  def _reduce_151(val, _values, result)
     result = SQLParser::Statement::Date.new(val[1]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module SQLParser
