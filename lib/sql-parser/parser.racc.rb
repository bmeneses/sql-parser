#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'

require File.dirname(__FILE__) + '/parser.rex.rb'

module SQLParser
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 329)

def self.parse(sql)
  new.scan_str(sql)
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    43,    71,    92,    92,   219,   104,    26,    66,    97,     7,
   230,    95,     8,   226,   127,    96,   231,   137,    43,    61,
    98,   139,   100,   101,   224,   102,   103,    68,   221,    68,
   222,   223,   140,   188,    72,    18,    43,    68,    68,    69,
    70,   141,   224,    46,    47,   142,    31,    44,    35,    37,
    38,    39,    40,    18,    48,   143,    51,    46,    47,   132,
   133,    46,    47,    68,    31,    44,    35,    37,    38,    39,
    40,    18,    48,   146,    51,    85,    84,   130,   129,    46,
    47,   167,    31,    44,    35,    37,    38,    39,    40,    43,
    48,    97,    51,   168,   169,    26,   170,   171,   172,   173,
     8,   174,   128,    98,   176,   100,   101,    43,   102,   103,
   212,   213,   177,    26,   123,    61,    61,   183,   184,    14,
    68,   188,   115,   200,    18,   203,    68,   205,    61,   207,
   208,   107,    46,    47,    87,    31,    44,    35,    37,    38,
    39,    40,    18,    48,    18,    51,   218,    86,   115,    83,
    46,    47,    82,    31,    44,    35,    37,    38,    39,    40,
    43,    48,    97,    51,    81,    96,    26,  -142,    80,    79,
    78,     8,    77,    76,    98,    75,   100,   101,    43,   102,
   103,   -81,     8,    65,   224,    64,    61,   241,   188,   242,
   203,    55,   226,    54,    52,    18,    43,   246,    12,   248,
   188,    68,   224,    46,    47,    18,    31,    44,    35,    37,
    38,    39,    40,    18,    48,   253,    51,    11,   255,   256,
   257,    46,    47,     9,    31,    44,    35,    37,    38,    39,
    40,    18,    48,    68,    51,    43,   nil,   nil,   nil,    46,
    47,   147,    31,    44,    35,    37,    38,    39,    40,   nil,
    48,   nil,    51,    43,   nil,   nil,   nil,   nil,   nil,    26,
   nil,   nil,   154,   nil,   nil,   nil,   nil,   nil,   nil,   151,
    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    46,    47,
   nil,    31,    44,    35,    37,    38,    39,    40,    18,    48,
   nil,    51,    43,   nil,   nil,   nil,    46,    47,   147,    31,
    44,    35,    37,    38,    39,    40,   nil,    48,   nil,    51,
    43,   nil,   nil,   nil,   nil,   nil,    26,   nil,   nil,   154,
   nil,   nil,   nil,   nil,   nil,   nil,   151,    18,    43,   nil,
   nil,   nil,   nil,   nil,   224,    46,    47,   nil,    31,    44,
    35,    37,    38,    39,    40,    18,    48,   nil,    51,   nil,
   nil,   nil,   nil,    46,    47,   nil,    31,    44,    35,    37,
    38,    39,    40,    18,    48,   nil,    51,    43,   nil,   nil,
   nil,    46,    47,   147,    31,    44,    35,    37,    38,    39,
    40,   nil,    48,   nil,    51,    43,   nil,   nil,   nil,   nil,
   nil,    26,   nil,   nil,   154,   nil,   nil,   nil,   nil,   nil,
   nil,   151,    18,    43,   nil,   nil,   nil,   nil,   nil,    26,
    46,    47,   nil,    31,    44,    35,    37,    38,    39,    40,
    18,    48,   nil,    51,   nil,   nil,   nil,   nil,    46,    47,
   nil,    31,    44,    35,    37,    38,    39,    40,    18,    48,
    43,    51,   nil,   nil,   nil,   nil,    26,   nil,   nil,    31,
    44,    35,    37,    38,    39,    40,   nil,    48,    43,    51,
   nil,   nil,   nil,   nil,   224,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    18,    43,   nil,   nil,   nil,
   nil,   nil,   224,    46,    47,   nil,    31,    44,    35,    37,
    38,    39,    40,    18,    48,   nil,    51,   nil,   nil,   nil,
   nil,    46,    47,   nil,    31,    44,    35,    37,    38,    39,
    40,    18,    48,   nil,    51,    43,   nil,   nil,   nil,    46,
    47,   224,    31,    44,    35,    37,    38,    39,    40,   nil,
    48,   nil,    51,    43,   nil,   nil,   nil,   nil,   nil,    26,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    18,    43,   nil,   nil,   nil,   nil,   nil,   224,    46,    47,
   nil,    31,    44,    35,    37,    38,    39,    40,    18,    48,
   nil,    51,   nil,   nil,   nil,   nil,    46,    47,   nil,    31,
    44,    35,    37,    38,    39,    40,    18,    48,   nil,    51,
    43,   nil,   nil,   nil,    46,    47,    26,    31,    44,    35,
    37,    38,    39,    40,   nil,    48,   nil,    51,    43,   nil,
   nil,   nil,   nil,   nil,   224,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    18,    43,   nil,   nil,   nil,
   nil,   nil,   224,    46,    47,   nil,    31,    44,    35,    37,
    38,    39,    40,    18,    48,   nil,    51,   nil,   nil,   nil,
   nil,    46,    47,   nil,    31,    44,    35,    37,    38,    39,
    40,    18,    48,   nil,    51,    43,   nil,   nil,   nil,    46,
    47,    26,    31,    44,    35,    37,    38,    39,    40,   nil,
    48,   nil,    51,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    43,   nil,   nil,   nil,   nil,   nil,   147,   nil,   nil,
    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    46,    47,
   nil,    31,    44,    35,    37,    38,    39,    40,   154,    48,
   nil,    51,    43,   nil,   nil,   151,    18,   nil,    26,   nil,
   nil,   nil,   nil,   nil,    46,    47,   nil,    31,    44,    35,
    37,    38,    39,    40,    43,    48,   nil,    51,   189,   190,
    26,   191,   192,   193,   nil,   nil,   nil,    18,   194,   195,
   196,   197,   198,   199,   nil,    46,    47,   nil,    31,    44,
    35,    37,    38,    39,    40,    43,    48,   nil,    51,    18,
   nil,   147,   nil,   nil,   nil,   nil,   nil,    46,    47,   nil,
    31,    44,    35,    37,    38,    39,    40,    43,    48,   nil,
    51,   nil,   154,    26,   nil,   nil,   nil,   nil,   nil,   151,
    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    46,    47,
   nil,    31,    44,    35,    37,    38,    39,    40,    43,    48,
   nil,    51,    18,   nil,    26,   nil,   nil,   nil,   nil,   nil,
    46,    47,   nil,    31,    44,    35,    37,    38,    39,    40,
    43,    48,   nil,    51,   nil,   nil,    26,   nil,   nil,   nil,
   nil,   nil,   117,    18,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    46,    47,   nil,    31,    44,    35,    37,    38,    39,
    40,    43,    48,   nil,    51,    18,   nil,   147,   nil,   nil,
   nil,   nil,     8,    46,    47,   nil,    31,    44,    35,    37,
    38,    39,    40,    43,    48,   nil,    51,   nil,   154,    26,
   nil,   nil,   nil,   nil,   nil,   151,    18,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    46,    47,   nil,    31,    44,    35,
    37,    38,    39,    40,    43,    48,   nil,    51,    18,   nil,
    26,   nil,   nil,   nil,   nil,   nil,    46,    47,   nil,    31,
    44,    35,    37,    38,    39,    40,   nil,    48,    43,    51,
   nil,   nil,   nil,   nil,   147,   nil,   nil,   nil,   nil,    18,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    46,    47,   nil,
    31,    44,    35,    37,    38,    39,    40,   nil,    48,    43,
    51,   nil,   151,    18,   nil,   224,   nil,   nil,   nil,   nil,
   nil,    46,    47,   nil,    31,    44,    35,    37,    38,    39,
    40,   nil,    48,   nil,    51,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    18,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    46,    47,   nil,    31,    44,    35,    37,    38,
    39,    40,   nil,    48,   nil,    51 ]

racc_action_check = [
    95,    20,    55,   130,   186,    57,    95,    17,    56,     0,
   193,    56,     0,   191,    83,    56,   193,    96,   253,    97,
    56,    98,    56,    56,   253,    56,    56,    57,   189,    17,
   189,   189,    99,   186,    20,    95,   246,    55,   130,    19,
    19,   101,   246,    95,    95,   102,    95,    95,    95,    95,
    95,    95,    95,   253,    95,   103,    95,    83,    83,    90,
    90,   253,   253,   104,   253,   253,   253,   253,   253,   253,
   253,   246,   253,   106,   253,    48,    48,    88,    87,   246,
   246,   117,   246,   246,   246,   246,   246,   246,   246,   226,
   246,   181,   246,   118,   119,   226,   120,   121,   122,   126,
   226,   129,    84,   181,   135,   181,   181,     8,   181,   181,
   181,   181,   136,     8,    81,   139,   140,   145,   146,     8,
    75,   148,    74,   151,   226,   152,    66,   174,    64,   178,
   179,    63,   226,   226,    54,   226,   226,   226,   226,   226,
   226,   226,     8,   226,   184,   226,   185,    51,   187,    45,
     8,     8,    44,     8,     8,     8,     8,     8,     8,     8,
   224,     8,   108,     8,    43,    94,   224,    41,    40,    39,
    38,   224,    37,    35,   108,    32,   108,   108,   223,   108,
   108,    18,   200,    16,   223,    13,    12,   213,   214,   215,
   220,    11,   222,    10,     9,   224,   221,   225,     7,   230,
   240,   241,   221,   224,   224,   242,   224,   224,   224,   224,
   224,   224,   224,   223,   224,   243,   224,     5,   247,   249,
   250,   223,   223,     1,   223,   223,   223,   223,   223,   223,
   223,   221,   223,   257,   223,   212,   nil,   nil,   nil,   221,
   221,   212,   221,   221,   221,   221,   221,   221,   221,   nil,
   221,   nil,   221,   208,   nil,   nil,   nil,   nil,   nil,   208,
   nil,   nil,   212,   nil,   nil,   nil,   nil,   nil,   nil,   212,
   212,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   212,   212,
   nil,   212,   212,   212,   212,   212,   212,   212,   208,   212,
   nil,   212,   203,   nil,   nil,   nil,   208,   208,   203,   208,
   208,   208,   208,   208,   208,   208,   nil,   208,   nil,   208,
    71,   nil,   nil,   nil,   nil,   nil,    71,   nil,   nil,   203,
   nil,   nil,   nil,   nil,   nil,   nil,   203,   203,   199,   nil,
   nil,   nil,   nil,   nil,   199,   203,   203,   nil,   203,   203,
   203,   203,   203,   203,   203,    71,   203,   nil,   203,   nil,
   nil,   nil,   nil,    71,    71,   nil,    71,    71,    71,    71,
    71,    71,    71,   199,    71,   nil,    71,   107,   nil,   nil,
   nil,   199,   199,   107,   199,   199,   199,   199,   199,   199,
   199,   nil,   199,   nil,   199,   137,   nil,   nil,   nil,   nil,
   nil,   137,   nil,   nil,   107,   nil,   nil,   nil,   nil,   nil,
   nil,   107,   107,    21,   nil,   nil,   nil,   nil,   nil,    21,
   107,   107,   nil,   107,   107,   107,   107,   107,   107,   107,
   137,   107,   nil,   107,   nil,   nil,   nil,   nil,   137,   137,
   nil,   137,   137,   137,   137,   137,   137,   137,    21,   137,
    26,   137,   nil,   nil,   nil,   nil,    26,   nil,   nil,    21,
    21,    21,    21,    21,    21,    21,   nil,    21,   198,    21,
   nil,   nil,   nil,   nil,   198,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    26,   197,   nil,   nil,   nil,
   nil,   nil,   197,    26,    26,   nil,    26,    26,    26,    26,
    26,    26,    26,   198,    26,   nil,    26,   nil,   nil,   nil,
   nil,   198,   198,   nil,   198,   198,   198,   198,   198,   198,
   198,   197,   198,   nil,   198,   196,   nil,   nil,   nil,   197,
   197,   196,   197,   197,   197,   197,   197,   197,   197,   nil,
   197,   nil,   197,    69,   nil,   nil,   nil,   nil,   nil,    69,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   196,   194,   nil,   nil,   nil,   nil,   nil,   194,   196,   196,
   nil,   196,   196,   196,   196,   196,   196,   196,    69,   196,
   nil,   196,   nil,   nil,   nil,   nil,    69,    69,   nil,    69,
    69,    69,    69,    69,    69,    69,   194,    69,   nil,    69,
    80,   nil,   nil,   nil,   194,   194,    80,   194,   194,   194,
   194,   194,   194,   194,   nil,   194,   nil,   194,   192,   nil,
   nil,   nil,   nil,   nil,   192,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    80,   190,   nil,   nil,   nil,
   nil,   nil,   190,    80,    80,   nil,    80,    80,    80,    80,
    80,    80,    80,   192,    80,   nil,    80,   nil,   nil,   nil,
   nil,   192,   192,   nil,   192,   192,   192,   192,   192,   192,
   192,   190,   192,   nil,   192,    72,   nil,   nil,   nil,   190,
   190,    72,   190,   190,   190,   190,   190,   190,   190,   nil,
   190,   nil,   190,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   188,   nil,   nil,   nil,   nil,   nil,   188,   nil,   nil,
    72,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    72,    72,
   nil,    72,    72,    72,    72,    72,    72,    72,   188,    72,
   nil,    72,    79,   nil,   nil,   188,   188,   nil,    79,   nil,
   nil,   nil,   nil,   nil,   188,   188,   nil,   188,   188,   188,
   188,   188,   188,   188,    78,   188,   nil,   188,   150,   150,
    78,   150,   150,   150,   nil,   nil,   nil,    79,   150,   150,
   150,   150,   150,   150,   nil,    79,    79,   nil,    79,    79,
    79,    79,    79,    79,    79,   183,    79,   nil,    79,    78,
   nil,   183,   nil,   nil,   nil,   nil,   nil,    78,    78,   nil,
    78,    78,    78,    78,    78,    78,    78,    70,    78,   nil,
    78,   nil,   183,    70,   nil,   nil,   nil,   nil,   nil,   183,
   183,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   183,   183,
   nil,   183,   183,   183,   183,   183,   183,   183,    77,   183,
   nil,   183,    70,   nil,    77,   nil,   nil,   nil,   nil,   nil,
    70,    70,   nil,    70,    70,    70,    70,    70,    70,    70,
    76,    70,   nil,    70,   nil,   nil,    76,   nil,   nil,   nil,
   nil,   nil,    76,    77,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    77,    77,   nil,    77,    77,    77,    77,    77,    77,
    77,   147,    77,   nil,    77,    76,   nil,   147,   nil,   nil,
   nil,   nil,   147,    76,    76,   nil,    76,    76,    76,    76,
    76,    76,    76,   177,    76,   nil,    76,   nil,   147,   177,
   nil,   nil,   nil,   nil,   nil,   147,   147,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   147,   147,   nil,   147,   147,   147,
   147,   147,   147,   147,    65,   147,   nil,   147,   177,   nil,
    65,   nil,   nil,   nil,   nil,   nil,   177,   177,   nil,   177,
   177,   177,   177,   177,   177,   177,   nil,   177,   154,   177,
   nil,   nil,   nil,   nil,   154,   nil,   nil,   nil,   nil,    65,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    65,    65,   nil,
    65,    65,    65,    65,    65,    65,    65,   nil,    65,   195,
    65,   nil,   154,   154,   nil,   195,   nil,   nil,   nil,   nil,
   nil,   154,   154,   nil,   154,   154,   154,   154,   154,   154,
   154,   nil,   154,   nil,   154,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   195,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   195,   195,   nil,   195,   195,   195,   195,   195,
   195,   195,   nil,   195,   nil,   195 ]

racc_action_pointer = [
    -5,   223,   nil,   nil,   nil,   215,   nil,   183,   101,   194,
   189,   188,   145,   165,   nil,   nil,   174,   -12,   128,   -10,
   -17,   397,   nil,   nil,   nil,   nil,   434,   nil,   nil,   nil,
   nil,   nil,   122,   nil,   nil,   161,   nil,   160,   158,   157,
   156,   108,   nil,   111,   146,    90,   nil,   nil,    15,   nil,
   nil,    84,   nil,   nil,   129,    -4,    -1,   -14,   nil,   nil,
   nil,   nil,   nil,   101,    87,   928,    85,   nil,   nil,   527,
   791,   304,   659,   nil,   109,    79,   844,   822,   738,   716,
   584,   108,   nil,     8,    42,   nil,   nil,    72,    68,   nil,
    49,   nil,   nil,   nil,   149,    -6,     5,   -22,    -1,    10,
   nil,    16,    20,    30,    22,   nil,    42,   361,   153,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    68,    80,    81,
    83,    84,    85,   nil,   nil,   nil,    93,   nil,   nil,    94,
    -3,   nil,   nil,   nil,   nil,    91,   103,   379,   nil,    74,
    75,   nil,   nil,   nil,   nil,    85,   115,   875,    79,   nil,
   715,   111,    90,   nil,   952,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   119,   nil,   nil,   897,   116,   121,
   nil,    82,   nil,   769,   103,   133,    -9,   135,   685,    -6,
   620,     1,   602,   -23,   545,   983,   509,   470,   452,   322,
   165,   nil,   nil,   286,   nil,   nil,   nil,   nil,   247,   nil,
   nil,   nil,   229,   175,   146,   180,   nil,   nil,   nil,   nil,
   155,   190,   180,   172,   154,   162,    83,   nil,   nil,   nil,
   160,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   158,   160,   164,   180,   nil,   nil,    30,   205,   nil,   206,
   211,   nil,   nil,    12,   nil,   nil,   nil,   192,   nil,   nil ]

racc_action_default = [
  -154,  -154,    -1,    -2,    -3,    -5,   -18,  -154,  -154,  -154,
    -7,  -154,  -154,   -26,   -27,   -28,   -30,   -33,  -148,  -110,
  -113,  -154,  -115,  -116,  -117,  -118,  -154,  -120,  -121,  -122,
  -123,  -124,  -154,  -126,  -127,  -154,  -129,  -154,  -154,  -154,
  -154,  -135,  -136,  -140,  -154,  -154,  -146,  -147,  -154,  -151,
  -152,  -154,   260,    -4,  -154,  -154,  -154,   -38,   -39,   -41,
   -42,   -81,   -25,   -58,  -154,  -154,  -154,   -32,  -148,  -154,
  -154,  -154,  -154,  -114,  -154,  -154,  -154,  -154,  -154,  -154,
  -154,  -138,  -139,  -154,  -154,  -150,  -153,  -154,    -6,   -10,
   -14,   -12,   -13,   -19,  -154,  -154,  -154,  -154,  -154,  -154,
   -46,   -48,   -50,   -51,  -154,   -37,   -60,  -154,   -35,   -29,
   -31,  -108,  -109,  -111,  -112,  -119,  -125,  -154,  -154,  -154,
  -154,  -154,  -154,  -137,  -141,  -143,  -154,  -145,  -149,  -154,
  -154,   -11,   -15,   -16,   -20,  -154,   -23,  -154,   -43,  -154,
  -154,   -47,   -49,   -52,   -36,   -65,  -154,  -154,   -59,   -67,
  -154,  -154,   -84,   -86,  -154,   -89,   -90,   -91,   -93,   -94,
   -95,   -96,   -97,   -98,  -105,  -106,  -107,  -128,  -130,  -131,
  -132,  -133,  -134,  -144,  -154,    -9,   -21,  -154,  -154,   -75,
   -44,  -154,   -34,  -154,  -154,  -154,  -154,  -107,  -154,  -154,
  -154,  -154,  -154,  -154,  -154,  -154,  -154,  -154,  -154,  -154,
  -154,   -40,   -80,  -154,   -88,    -8,   -22,   -24,  -154,   -45,
   -53,   -54,  -154,  -154,   -66,   -61,   -63,   -64,   -17,   -92,
   -85,  -154,  -154,  -154,  -154,  -154,  -154,   -71,   -72,   -77,
  -154,   -79,   -99,  -100,  -101,  -102,  -103,  -104,   -87,   -74,
   -55,  -154,  -154,  -154,   -70,   -76,  -154,  -154,   -78,  -154,
   -57,   -83,   -62,  -154,   -69,   -73,   -56,  -154,   -68,   -82 ]

racc_goto_table = [
    67,    56,    17,   148,   178,    57,   135,    89,   217,   216,
   201,    15,   145,    93,   227,   113,   114,   131,    13,    62,
    74,   225,     1,   229,    63,   232,   233,   234,   235,   236,
   237,   106,    94,   182,    88,   202,   209,   210,    91,   211,
   105,    53,   249,   186,   250,   244,   215,    10,     5,   110,
   201,   134,   243,   108,   245,     4,     3,    57,   116,    17,
   220,   238,   204,   111,   112,     2,   217,   252,   109,   126,
   118,   119,   120,   121,   122,   239,    73,   254,   124,   214,
   125,   201,   175,   nil,   258,   nil,   nil,   144,   206,   136,
   138,   nil,   nil,   247,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   240,   nil,
   nil,   nil,   nil,    91,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   181,
   nil,   179,   180,    57,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   187,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   136,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   179,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    74,   nil,
   179,   nil,   nil,   nil,   251,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   259 ]

racc_goto_check = [
    12,    15,    19,    38,    20,    29,    18,     9,    43,    42,
    13,    23,    27,    16,    48,    59,    59,    11,    21,    22,
    19,    46,     1,    46,    25,    46,    46,    46,    46,    46,
    46,    26,    17,    28,     8,    31,    35,    36,    12,    37,
    12,     7,    39,    38,    40,    48,    41,     6,     5,    12,
    13,    16,    46,    15,    46,     4,     3,    29,    12,    19,
    52,    53,    54,    19,    19,     2,    43,    42,    23,    61,
    19,    19,    19,    19,    19,    20,    62,    46,    74,    38,
    75,    13,     9,   nil,    46,   nil,   nil,    12,    18,    19,
    29,   nil,   nil,    20,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    38,   nil,
   nil,   nil,   nil,    12,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    15,
   nil,    19,    29,    29,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    19,   nil,
    19,   nil,   nil,   nil,    12,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    12 ]

racc_goto_pointer = [
   nil,    22,    65,    56,    55,    48,    42,    31,   -21,   -48,
   nil,   -73,   -17,  -141,   nil,   -11,   -43,   -24,   -89,    -6,
  -133,    10,     6,     3,   nil,    11,   -32,   -94,  -112,    -7,
   nil,  -116,   nil,   nil,   nil,  -145,  -144,  -142,  -104,  -199,
  -197,  -138,  -175,  -176,   nil,   nil,  -169,   nil,  -177,   nil,
   nil,   nil,  -128,  -142,   -92,   nil,   nil,   nil,   nil,   -56,
   nil,   -14,    55,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    -5,    -3,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   185,   nil,   nil,   nil,   nil,
    90,   nil,    33,   149,     6,   nil,   nil,   nil,   nil,   166,
   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,   nil,    34,
    58,   228,    59,    60,    99,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    24,   165,   159,   150,   160,   nil,   161,
   162,   163,   152,   153,   155,   156,   157,   158,   164,    19,
    20,    21,    22,    23,    25,    27,    28,    29,    30,    32,
    36,    41,    42,    45,   nil,   nil,    49,    50 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 65, :_reduce_none,
  1, 66, :_reduce_none,
  1, 66, :_reduce_none,
  3, 67, :_reduce_4,
  0, 70, :_reduce_none,
  3, 70, :_reduce_6,
  0, 71, :_reduce_none,
  5, 71, :_reduce_8,
  3, 72, :_reduce_9,
  1, 72, :_reduce_none,
  2, 73, :_reduce_11,
  1, 74, :_reduce_none,
  1, 74, :_reduce_13,
  0, 75, :_reduce_14,
  1, 75, :_reduce_15,
  1, 75, :_reduce_16,
  3, 77, :_reduce_17,
  1, 69, :_reduce_none,
  4, 68, :_reduce_19,
  5, 68, :_reduce_20,
  3, 81, :_reduce_21,
  3, 82, :_reduce_22,
  1, 82, :_reduce_none,
  4, 80, :_reduce_24,
  3, 78, :_reduce_25,
  2, 78, :_reduce_26,
  1, 85, :_reduce_27,
  1, 85, :_reduce_28,
  3, 87, :_reduce_29,
  1, 87, :_reduce_none,
  3, 88, :_reduce_31,
  2, 88, :_reduce_32,
  1, 88, :_reduce_none,
  4, 86, :_reduce_34,
  2, 89, :_reduce_35,
  3, 79, :_reduce_36,
  2, 79, :_reduce_37,
  1, 79, :_reduce_none,
  1, 79, :_reduce_none,
  1, 95, :_reduce_none,
  1, 94, :_reduce_none,
  1, 94, :_reduce_none,
  3, 96, :_reduce_43,
  4, 96, :_reduce_44,
  5, 97, :_reduce_45,
  1, 98, :_reduce_46,
  2, 98, :_reduce_47,
  1, 98, :_reduce_48,
  2, 98, :_reduce_49,
  1, 98, :_reduce_50,
  1, 98, :_reduce_51,
  2, 98, :_reduce_52,
  1, 99, :_reduce_none,
  1, 99, :_reduce_none,
  2, 100, :_reduce_55,
  4, 101, :_reduce_56,
  1, 103, :_reduce_none,
  0, 90, :_reduce_none,
  2, 90, :_reduce_59,
  0, 91, :_reduce_none,
  3, 91, :_reduce_61,
  3, 105, :_reduce_62,
  1, 105, :_reduce_none,
  1, 106, :_reduce_none,
  0, 92, :_reduce_none,
  2, 92, :_reduce_66,
  1, 108, :_reduce_none,
  6, 109, :_reduce_68,
  5, 109, :_reduce_69,
  4, 111, :_reduce_70,
  3, 111, :_reduce_71,
  1, 112, :_reduce_none,
  3, 112, :_reduce_73,
  3, 84, :_reduce_74,
  1, 84, :_reduce_none,
  4, 113, :_reduce_76,
  3, 113, :_reduce_77,
  4, 114, :_reduce_78,
  3, 114, :_reduce_79,
  2, 115, :_reduce_80,
  1, 93, :_reduce_81,
  3, 104, :_reduce_82,
  1, 104, :_reduce_none,
  1, 102, :_reduce_none,
  3, 102, :_reduce_85,
  1, 116, :_reduce_none,
  3, 116, :_reduce_87,
  2, 117, :_reduce_88,
  1, 117, :_reduce_none,
  1, 118, :_reduce_none,
  1, 119, :_reduce_none,
  3, 119, :_reduce_92,
  1, 120, :_reduce_none,
  1, 120, :_reduce_none,
  1, 120, :_reduce_none,
  1, 120, :_reduce_none,
  1, 120, :_reduce_none,
  1, 120, :_reduce_none,
  3, 121, :_reduce_99,
  3, 121, :_reduce_100,
  3, 121, :_reduce_101,
  3, 121, :_reduce_102,
  3, 121, :_reduce_103,
  3, 121, :_reduce_104,
  1, 110, :_reduce_none,
  1, 110, :_reduce_none,
  1, 122, :_reduce_none,
  3, 83, :_reduce_108,
  3, 83, :_reduce_109,
  1, 83, :_reduce_none,
  3, 123, :_reduce_111,
  3, 123, :_reduce_112,
  1, 123, :_reduce_none,
  2, 124, :_reduce_114,
  1, 124, :_reduce_none,
  1, 126, :_reduce_none,
  1, 126, :_reduce_none,
  1, 126, :_reduce_none,
  3, 126, :_reduce_119,
  1, 127, :_reduce_none,
  1, 127, :_reduce_none,
  1, 129, :_reduce_none,
  1, 129, :_reduce_none,
  1, 130, :_reduce_124,
  3, 107, :_reduce_125,
  1, 107, :_reduce_none,
  1, 133, :_reduce_none,
  4, 128, :_reduce_128,
  1, 128, :_reduce_none,
  4, 134, :_reduce_130,
  4, 134, :_reduce_131,
  4, 134, :_reduce_132,
  4, 134, :_reduce_133,
  4, 134, :_reduce_134,
  1, 131, :_reduce_none,
  1, 131, :_reduce_none,
  3, 135, :_reduce_137,
  2, 135, :_reduce_138,
  2, 135, :_reduce_139,
  1, 135, :_reduce_140,
  3, 136, :_reduce_141,
  1, 137, :_reduce_none,
  1, 138, :_reduce_none,
  2, 139, :_reduce_144,
  1, 139, :_reduce_145,
  1, 125, :_reduce_146,
  1, 125, :_reduce_147,
  1, 76, :_reduce_148,
  3, 132, :_reduce_149,
  2, 132, :_reduce_150,
  1, 132, :_reduce_none,
  1, 140, :_reduce_none,
  2, 141, :_reduce_153 ]

racc_reduce_n = 154

racc_shift_n = 260

racc_token_table = {
  false => 0,
  :error => 1,
  :ORDER => 2,
  :BY => 3,
  :FETCH => 4,
  :FIRST => 5,
  :unsigned_integer => 6,
  :ROWS => 7,
  :ONLY => 8,
  :comma => 9,
  :ASC => 10,
  :DESC => 11,
  :left_paren => 12,
  :right_paren => 13,
  :INSERT => 14,
  :INTO => 15,
  :VALUES => 16,
  :SELECT => 17,
  :asterisk => 18,
  :AS => 19,
  :FROM => 20,
  :CROSS => 21,
  :JOIN => 22,
  :INNER => 23,
  :LEFT => 24,
  :OUTER => 25,
  :RIGHT => 26,
  :FULL => 27,
  :ON => 28,
  :USING => 29,
  :WHERE => 30,
  :GROUP => 31,
  :HAVING => 32,
  :NOT => 33,
  :BETWEEN => 34,
  :AND => 35,
  :IN => 36,
  :LIKE => 37,
  :IS => 38,
  :NULL => 39,
  :EXISTS => 40,
  :identifier => 41,
  :OR => 42,
  :equals_operator => 43,
  :not_equals_operator => 44,
  :less_than_operator => 45,
  :greater_than_operator => 46,
  :less_than_or_equals_operator => 47,
  :greater_than_or_equals_operator => 48,
  :plus_sign => 49,
  :minus_sign => 50,
  :solidus => 51,
  :CURRENT_USER => 52,
  :period => 53,
  :COUNT => 54,
  :AVG => 55,
  :MAX => 56,
  :MIN => 57,
  :SUM => 58,
  :E => 59,
  :quote => 60,
  :character_string_literal => 61,
  :DATE => 62,
  :date_string => 63 }

racc_nt_base = 64

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "ORDER",
  "BY",
  "FETCH",
  "FIRST",
  "unsigned_integer",
  "ROWS",
  "ONLY",
  "comma",
  "ASC",
  "DESC",
  "left_paren",
  "right_paren",
  "INSERT",
  "INTO",
  "VALUES",
  "SELECT",
  "asterisk",
  "AS",
  "FROM",
  "CROSS",
  "JOIN",
  "INNER",
  "LEFT",
  "OUTER",
  "RIGHT",
  "FULL",
  "ON",
  "USING",
  "WHERE",
  "GROUP",
  "HAVING",
  "NOT",
  "BETWEEN",
  "AND",
  "IN",
  "LIKE",
  "IS",
  "NULL",
  "EXISTS",
  "identifier",
  "OR",
  "equals_operator",
  "not_equals_operator",
  "less_than_operator",
  "greater_than_operator",
  "less_than_or_equals_operator",
  "greater_than_or_equals_operator",
  "plus_sign",
  "minus_sign",
  "solidus",
  "CURRENT_USER",
  "period",
  "COUNT",
  "AVG",
  "MAX",
  "MIN",
  "SUM",
  "E",
  "quote",
  "character_string_literal",
  "DATE",
  "date_string",
  "$start",
  "direct_sql_statement",
  "direct_sql_data_statement",
  "direct_select_statement_multiple_rows",
  "insert_specification",
  "query_expression",
  "order_by_clause",
  "fetch_only_clause",
  "sort_specification_list",
  "sort_specification",
  "sort_key",
  "ordering_specification",
  "column_name",
  "subquery",
  "query_specification",
  "table_reference",
  "value_list",
  "column_list",
  "in_column_list",
  "value_expression",
  "in_value_list",
  "select_list",
  "table_expression",
  "select_sublist",
  "derived_column",
  "from_clause",
  "where_clause",
  "group_by_clause",
  "having_clause",
  "table_name",
  "joined_table",
  "table_subquery",
  "cross_join",
  "qualified_join",
  "join_type",
  "join_specification",
  "join_condition",
  "named_columns_join",
  "search_condition",
  "join_column_list",
  "column_name_list",
  "grouping_column_reference_list",
  "grouping_column_reference",
  "column_reference",
  "row_subquery",
  "between_predicate",
  "row_value_constructor",
  "in_predicate",
  "in_predicate_value",
  "like_predicate",
  "null_predicate",
  "exists_predicate",
  "boolean_term",
  "boolean_factor",
  "boolean_test",
  "boolean_primary",
  "predicate",
  "comparison_predicate",
  "row_value_constructor_element",
  "term",
  "factor",
  "sign",
  "value_expression_primary",
  "unsigned_value_specification",
  "set_function_specification",
  "unsigned_literal",
  "general_value_specification",
  "unsigned_numeric_literal",
  "general_literal",
  "qualifier",
  "general_set_function",
  "exact_numeric_literal",
  "approximate_numeric_literal",
  "mantissa",
  "exponent",
  "signed_integer",
  "datetime_literal",
  "date_literal" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

module_eval(<<'.,.,', 'parser.racc', 13)
  def _reduce_4(val, _values, result)
     result = SQLParser::Statement::DirectSelect.new(val[0], val[1], val[2]) 
    result
  end
.,.,

# reduce 5 omitted

module_eval(<<'.,.,', 'parser.racc', 18)
  def _reduce_6(val, _values, result)
     result = SQLParser::Statement::OrderBy.new(val[2]) 
    result
  end
.,.,

# reduce 7 omitted

module_eval(<<'.,.,', 'parser.racc', 22)
  def _reduce_8(val, _values, result)
     result = SQLParser::Statement::FetchOnly.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 25)
  def _reduce_9(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 10 omitted

module_eval(<<'.,.,', 'parser.racc', 29)
  def _reduce_11(val, _values, result)
     result = val[1].new(val[0]) 
    result
  end
.,.,

# reduce 12 omitted

module_eval(<<'.,.,', 'parser.racc', 33)
  def _reduce_13(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 36)
  def _reduce_14(val, _values, result)
     result = SQLParser::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 37)
  def _reduce_15(val, _values, result)
     result = SQLParser::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 38)
  def _reduce_16(val, _values, result)
     result = SQLParser::Statement::Descending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 43)
  def _reduce_17(val, _values, result)
     result = SQLParser::Statement::Subquery.new(val[1]) 
    result
  end
.,.,

# reduce 18 omitted

module_eval(<<'.,.,', 'parser.racc', 49)
  def _reduce_19(val, _values, result)
     result = SQLParser::Statement::Insert.new(val[2], nil, val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 50)
  def _reduce_20(val, _values, result)
     result = SQLParser::Statement::Insert.new(val[2], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 53)
  def _reduce_21(val, _values, result)
     result = SQLParser::Statement::InColumnList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 56)
  def _reduce_22(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 23 omitted

module_eval(<<'.,.,', 'parser.racc', 60)
  def _reduce_24(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 63)
  def _reduce_25(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 64)
  def _reduce_26(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 67)
  def _reduce_27(val, _values, result)
     result = SQLParser::Statement::All.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 68)
  def _reduce_28(val, _values, result)
     result = SQLParser::Statement::SelectList.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 71)
  def _reduce_29(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 30 omitted

module_eval(<<'.,.,', 'parser.racc', 75)
  def _reduce_31(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 76)
  def _reduce_32(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 33 omitted

module_eval(<<'.,.,', 'parser.racc', 80)
  def _reduce_34(val, _values, result)
     result = SQLParser::Statement::TableExpression.new(val[0], val[1], val[2], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 83)
  def _reduce_35(val, _values, result)
     result = SQLParser::Statement::FromClause.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 86)
  def _reduce_36(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 87)
  def _reduce_37(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 38 omitted

# reduce 39 omitted

# reduce 40 omitted

# reduce 41 omitted

# reduce 42 omitted

module_eval(<<'.,.,', 'parser.racc', 99)
  def _reduce_43(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 100)
  def _reduce_44(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 103)
  def _reduce_45(val, _values, result)
     result = val[1].new(val[0], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 106)
  def _reduce_46(val, _values, result)
     result = SQLParser::Statement::InnerJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 107)
  def _reduce_47(val, _values, result)
     result = SQLParser::Statement::LeftOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 108)
  def _reduce_48(val, _values, result)
     result = SQLParser::Statement::LeftJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 109)
  def _reduce_49(val, _values, result)
     result = SQLParser::Statement::RightOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 110)
  def _reduce_50(val, _values, result)
     result = SQLParser::Statement::RightJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 111)
  def _reduce_51(val, _values, result)
     result = SQLParser::Statement::FullJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 112)
  def _reduce_52(val, _values, result)
     result = SQLParser::Statement::FullOuterJoin 
    result
  end
.,.,

# reduce 53 omitted

# reduce 54 omitted

module_eval(<<'.,.,', 'parser.racc', 119)
  def _reduce_55(val, _values, result)
     result = SQLParser::Statement::On.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 122)
  def _reduce_56(val, _values, result)
     result = SQLParser::Statement::Using.new(val[2]) 
    result
  end
.,.,

# reduce 57 omitted

# reduce 58 omitted

module_eval(<<'.,.,', 'parser.racc', 129)
  def _reduce_59(val, _values, result)
     result = SQLParser::Statement::WhereClause.new(val[1]) 
    result
  end
.,.,

# reduce 60 omitted

module_eval(<<'.,.,', 'parser.racc', 133)
  def _reduce_61(val, _values, result)
     result = SQLParser::Statement::GroupByClause.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 136)
  def _reduce_62(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 63 omitted

# reduce 64 omitted

# reduce 65 omitted

module_eval(<<'.,.,', 'parser.racc', 144)
  def _reduce_66(val, _values, result)
     result = SQLParser::Statement::HavingClause.new(val[1]) 
    result
  end
.,.,

# reduce 67 omitted

module_eval(<<'.,.,', 'parser.racc', 151)
  def _reduce_68(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Between.new(val[0], val[3], val[5])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 152)
  def _reduce_69(val, _values, result)
     result = SQLParser::Statement::Between.new(val[0], val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 155)
  def _reduce_70(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::In.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 156)
  def _reduce_71(val, _values, result)
     result = SQLParser::Statement::In.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 72 omitted

module_eval(<<'.,.,', 'parser.racc', 160)
  def _reduce_73(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 163)
  def _reduce_74(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 75 omitted

module_eval(<<'.,.,', 'parser.racc', 170)
  def _reduce_76(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Like.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 171)
  def _reduce_77(val, _values, result)
     result = SQLParser::Statement::Like.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 174)
  def _reduce_78(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 175)
  def _reduce_79(val, _values, result)
     result = SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 178)
  def _reduce_80(val, _values, result)
     result = SQLParser::Statement::Exists.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 182)
  def _reduce_81(val, _values, result)
     result = SQLParser::Statement::Table.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 185)
  def _reduce_82(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 83 omitted

# reduce 84 omitted

module_eval(<<'.,.,', 'parser.racc', 191)
  def _reduce_85(val, _values, result)
     result = SQLParser::Statement::Or.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 86 omitted

module_eval(<<'.,.,', 'parser.racc', 195)
  def _reduce_87(val, _values, result)
     result = SQLParser::Statement::And.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 198)
  def _reduce_88(val, _values, result)
     result = SQLParser::Statement::Not.new(val[1]) 
    result
  end
.,.,

# reduce 89 omitted

# reduce 90 omitted

# reduce 91 omitted

module_eval(<<'.,.,', 'parser.racc', 206)
  def _reduce_92(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 93 omitted

# reduce 94 omitted

# reduce 95 omitted

# reduce 96 omitted

# reduce 97 omitted

# reduce 98 omitted

module_eval(<<'.,.,', 'parser.racc', 217)
  def _reduce_99(val, _values, result)
     result = SQLParser::Statement::Equals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 218)
  def _reduce_100(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Equals.new(val[0], val[2])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 219)
  def _reduce_101(val, _values, result)
     result = SQLParser::Statement::Less.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 220)
  def _reduce_102(val, _values, result)
     result = SQLParser::Statement::Greater.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 221)
  def _reduce_103(val, _values, result)
     result = SQLParser::Statement::LessOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 222)
  def _reduce_104(val, _values, result)
     result = SQLParser::Statement::GreaterOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 105 omitted

# reduce 106 omitted

# reduce 107 omitted

module_eval(<<'.,.,', 'parser.racc', 232)
  def _reduce_108(val, _values, result)
     result = SQLParser::Statement::Add.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 233)
  def _reduce_109(val, _values, result)
     result = SQLParser::Statement::Subtract.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 110 omitted

module_eval(<<'.,.,', 'parser.racc', 237)
  def _reduce_111(val, _values, result)
     result = SQLParser::Statement::Multiply.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 238)
  def _reduce_112(val, _values, result)
     result = SQLParser::Statement::Divide.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 113 omitted

module_eval(<<'.,.,', 'parser.racc', 242)
  def _reduce_114(val, _values, result)
     result = val[0].new(val[1]) 
    result
  end
.,.,

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

module_eval(<<'.,.,', 'parser.racc', 249)
  def _reduce_119(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

module_eval(<<'.,.,', 'parser.racc', 260)
  def _reduce_124(val, _values, result)
     result = SQLParser::Statement::CurrentUser.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 263)
  def _reduce_125(val, _values, result)
     result = SQLParser::Statement::QualifiedColumn.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 126 omitted

# reduce 127 omitted

module_eval(<<'.,.,', 'parser.racc', 270)
  def _reduce_128(val, _values, result)
     result = SQLParser::Statement::Count.new(SQLParser::Statement::All.new) 
    result
  end
.,.,

# reduce 129 omitted

module_eval(<<'.,.,', 'parser.racc', 274)
  def _reduce_130(val, _values, result)
     result = SQLParser::Statement::Count.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 275)
  def _reduce_131(val, _values, result)
     result = SQLParser::Statement::Average.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 276)
  def _reduce_132(val, _values, result)
     result = SQLParser::Statement::Maximum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 277)
  def _reduce_133(val, _values, result)
     result = SQLParser::Statement::Minimum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 278)
  def _reduce_134(val, _values, result)
     result = SQLParser::Statement::Sum.new(val[2]) 
    result
  end
.,.,

# reduce 135 omitted

# reduce 136 omitted

module_eval(<<'.,.,', 'parser.racc', 286)
  def _reduce_137(val, _values, result)
     result = SQLParser::Statement::Float.new("#{val[0]}.#{val[2]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 287)
  def _reduce_138(val, _values, result)
     result = SQLParser::Statement::Float.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 288)
  def _reduce_139(val, _values, result)
     result = SQLParser::Statement::Float.new("0.#{val[1]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 289)
  def _reduce_140(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 292)
  def _reduce_141(val, _values, result)
     result = SQLParser::Statement::ApproximateFloat.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 142 omitted

# reduce 143 omitted

module_eval(<<'.,.,', 'parser.racc', 301)
  def _reduce_144(val, _values, result)
     result = val[0].new(SQLParser::Statement::Integer.new(val[1])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 302)
  def _reduce_145(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 305)
  def _reduce_146(val, _values, result)
     result = SQLParser::Statement::UnaryPlus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 306)
  def _reduce_147(val, _values, result)
     result = SQLParser::Statement::UnaryMinus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 310)
  def _reduce_148(val, _values, result)
     result = SQLParser::Statement::Column.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 314)
  def _reduce_149(val, _values, result)
     result = SQLParser::Statement::String.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 315)
  def _reduce_150(val, _values, result)
     result = SQLParser::Statement::String.new('') 
    result
  end
.,.,

# reduce 151 omitted

# reduce 152 omitted

module_eval(<<'.,.,', 'parser.racc', 322)
  def _reduce_153(val, _values, result)
     result = SQLParser::Statement::Date.new(val[1]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module SQLParser
