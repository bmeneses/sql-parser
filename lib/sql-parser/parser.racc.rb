#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'

require File.dirname(__FILE__) + '/parser.rex.rb'

module SQLParser
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 314)

def self.parse(sql)
  new.scan_str(sql)
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    41,    91,    91,    69,   216,   103,   184,    90,    90,    26,
    64,   185,   186,    51,   187,   188,   189,     7,    52,    41,
     8,   190,   191,   192,   193,   194,   195,    66,   221,   227,
   128,   129,    66,   184,    59,   228,    70,   135,    18,    66,
    66,   218,   136,   219,   220,   137,    43,    44,   138,    31,
    42,    35,    37,    38,    39,    40,    45,    18,    48,    67,
    68,    82,    81,   139,    66,    43,    44,    41,    31,    42,
    35,    37,    38,    39,    40,    45,   221,    48,    96,   142,
   123,   122,   163,   164,   165,   166,    41,   167,    96,   168,
   169,    97,   170,    99,   100,    26,   101,   102,   209,   210,
     8,    97,    66,    99,   100,    18,   101,   102,   172,   173,
   114,    59,    59,    43,    44,   179,    31,    42,    35,    37,
    38,    39,    40,    45,    18,    48,   180,    66,   184,   125,
   196,   199,    43,    44,    41,    31,    42,    35,    37,    38,
    39,    40,    45,    26,    48,    59,   201,   202,   106,    14,
    96,   204,   205,    41,    94,    85,    84,    18,    95,   215,
    83,   114,    26,    97,   124,    99,   100,     8,   101,   102,
    95,    80,    18,   223,    79,    78,    77,    76,    75,    74,
    43,    44,    73,    31,    42,    35,    37,    38,    39,    40,
    45,    18,    48,   126,     8,   -83,   236,    63,    62,    43,
    44,    41,    31,    42,    35,    37,    38,    39,    40,    45,
    26,    48,   239,   133,   240,   199,    59,   223,    53,    49,
    41,   244,    12,   246,   247,   184,    66,    18,   252,   221,
    11,   254,   255,   256,   257,     9,    66,   nil,   nil,    18,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    43,    44,   nil,
    31,    42,    35,    37,    38,    39,    40,    45,    18,    48,
   nil,   nil,   nil,   nil,   nil,   nil,    43,    44,    41,    31,
    42,    35,    37,    38,    39,    40,    45,   221,    48,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    41,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   143,   nil,    18,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    43,    44,   nil,    31,    42,    35,
    37,    38,    39,    40,    45,   150,    48,    41,   nil,   nil,
   nil,   nil,   147,    18,   nil,   nil,    26,   nil,   nil,   nil,
   nil,    43,    44,   nil,    31,    42,    35,    37,    38,    39,
    40,    45,   nil,    48,    41,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   143,   nil,    18,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    43,    44,   nil,    31,    42,    35,    37,
    38,    39,    40,    45,   150,    48,    41,   nil,   nil,   nil,
   nil,   147,    18,   nil,   nil,   143,   nil,   nil,   nil,   nil,
    43,    44,   nil,    31,    42,    35,    37,    38,    39,    40,
    45,    41,    48,   nil,   nil,   nil,   150,   nil,   nil,   nil,
   221,   nil,   nil,   147,    18,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    43,    44,    41,    31,    42,    35,    37,    38,
    39,    40,    45,    26,    48,   nil,   nil,   nil,   nil,    18,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    43,    44,    41,
    31,    42,    35,    37,    38,    39,    40,    45,    26,    48,
   nil,   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    43,    44,    41,    31,    42,    35,    37,    38,    39,    40,
    45,    26,    48,   nil,   nil,   nil,   nil,    18,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    41,    31,    42,
    35,    37,    38,    39,    40,    45,   221,    48,   nil,   nil,
    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    43,    44,
    41,    31,    42,    35,    37,    38,    39,    40,    45,   221,
    48,   nil,   nil,   nil,   nil,    18,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    43,    44,    41,    31,    42,    35,    37,
    38,    39,    40,    45,   221,    48,   nil,   nil,    18,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    43,    44,    41,    31,
    42,    35,    37,    38,    39,    40,    45,   221,    48,   nil,
   nil,   nil,   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    43,    44,    41,    31,    42,    35,    37,    38,    39,
    40,    45,   221,    48,   nil,   nil,    18,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    43,    44,    41,    31,    42,    35,
    37,    38,    39,    40,    45,    26,    48,   nil,   nil,   nil,
   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    43,
    44,    41,    31,    42,    35,    37,    38,    39,    40,    45,
   221,    48,   nil,   nil,    18,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    43,    44,    41,    31,    42,    35,    37,    38,
    39,    40,    45,   221,    48,   nil,   nil,   nil,   nil,    18,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    43,    44,    41,
    31,    42,    35,    37,    38,    39,    40,    45,    26,    48,
   nil,   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    43,    44,    41,    31,    42,    35,    37,    38,    39,    40,
    45,    26,    48,   nil,   nil,   nil,   nil,    18,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    43,    44,   nil,    31,    42,
    35,    37,    38,    39,    40,    45,    41,    48,   nil,   nil,
    18,   nil,   nil,   nil,   nil,   143,   nil,   nil,    43,    44,
   nil,    31,    42,    35,    37,    38,    39,    40,    45,    41,
    48,   nil,   nil,   nil,   nil,   nil,   150,   nil,    26,   nil,
   nil,   nil,   nil,   147,    18,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    43,    44,    41,    31,    42,    35,    37,    38,
    39,    40,    45,    26,    48,   nil,   nil,    18,   nil,   116,
   nil,   nil,   nil,   nil,   nil,    43,    44,    41,    31,    42,
    35,    37,    38,    39,    40,    45,    26,    48,   nil,   nil,
   nil,   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    43,    44,    41,    31,    42,    35,    37,    38,    39,    40,
    45,    26,    48,   nil,   nil,    18,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    43,    44,    41,    31,    42,    35,    37,
    38,    39,    40,    45,    26,    48,   nil,   nil,   nil,   nil,
    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    43,    44,
    41,    31,    42,    35,    37,    38,    39,    40,    45,   143,
    48,   nil,   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    43,    44,    41,    31,    42,    35,    37,    38,    39,
    40,    45,    26,    48,   nil,   nil,   nil,   147,    18,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    43,    44,   nil,    31,
    42,    35,    37,    38,    39,    40,    45,    41,    48,   nil,
   nil,    18,   nil,   nil,   nil,   nil,   143,   nil,   nil,    43,
    44,     8,    31,    42,    35,    37,    38,    39,    40,    45,
    41,    48,   nil,   nil,   nil,   nil,   nil,   150,   nil,    26,
   nil,   nil,   nil,   nil,   147,    18,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    43,    44,   nil,    31,    42,    35,    37,
    38,    39,    40,    45,    41,    48,   nil,   nil,    18,   nil,
   nil,   nil,   nil,   143,   nil,   nil,    43,    44,   nil,    31,
    42,    35,    37,    38,    39,    40,    45,   nil,    48,   nil,
   nil,   nil,   nil,   nil,   150,   nil,   nil,   nil,   nil,   nil,
   nil,   147,    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    43,    44,   nil,    31,    42,    35,    37,    38,    39,    40,
    45,   nil,    48 ]

racc_action_check = [
    63,    53,   126,    20,   182,    55,   211,    53,   126,    63,
    17,   146,   146,    10,   146,   146,   146,     0,    10,   252,
     0,   146,   146,   146,   146,   146,   146,    55,   252,   189,
    88,    88,    17,   182,    96,   189,    20,    97,    63,    53,
   126,   185,    98,   185,   185,   100,    63,    63,   101,    63,
    63,    63,    63,    63,    63,    63,    63,   252,    63,    19,
    19,    45,    45,   102,   103,   252,   252,   244,   252,   252,
   252,   252,   252,   252,   252,   252,   244,   252,   177,   105,
    81,    79,   116,   117,   118,   119,   223,   120,   107,   121,
   124,   177,   125,   177,   177,   223,   177,   177,   177,   177,
   223,   107,    73,   107,   107,   244,   107,   107,   131,   132,
    72,   135,   136,   244,   244,   141,   244,   244,   244,   244,
   244,   244,   244,   244,   223,   244,   142,    64,   144,    85,
   147,   148,   223,   223,     8,   223,   223,   223,   223,   223,
   223,   223,   223,     8,   223,    62,   169,   170,    61,     8,
    54,   174,   175,   221,    54,    52,    51,   180,    54,   181,
    48,   183,   221,    54,    84,    54,    54,   221,    54,    54,
    93,    42,     8,   187,    41,    40,    39,    38,    37,    35,
     8,     8,    32,     8,     8,     8,     8,     8,     8,     8,
     8,   221,     8,    86,   196,    18,   202,    16,    13,   221,
   221,    94,   221,   221,   221,   221,   221,   221,   221,   221,
    94,   221,   210,    95,   212,   217,    12,   219,    11,     9,
   220,   222,     7,   227,   236,   238,   239,   240,   241,   220,
     5,   245,   247,   248,   249,     1,   257,   nil,   nil,    94,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    94,    94,   nil,
    94,    94,    94,    94,    94,    94,    94,    94,   220,    94,
   nil,   nil,   nil,   nil,   nil,   nil,   220,   220,   218,   220,
   220,   220,   220,   220,   220,   220,   220,   218,   220,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   209,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   209,   nil,   218,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   218,   218,   nil,   218,   218,   218,
   218,   218,   218,   218,   218,   209,   218,   205,   nil,   nil,
   nil,   nil,   209,   209,   nil,   nil,   205,   nil,   nil,   nil,
   nil,   209,   209,   nil,   209,   209,   209,   209,   209,   209,
   209,   209,   nil,   209,   106,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   106,   nil,   205,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   205,   205,   nil,   205,   205,   205,   205,
   205,   205,   205,   205,   106,   205,   199,   nil,   nil,   nil,
   nil,   106,   106,   nil,   nil,   199,   nil,   nil,   nil,   nil,
   106,   106,   nil,   106,   106,   106,   106,   106,   106,   106,
   106,   195,   106,   nil,   nil,   nil,   199,   nil,   nil,   nil,
   195,   nil,   nil,   199,   199,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   199,   199,    78,   199,   199,   199,   199,   199,
   199,   199,   199,    78,   199,   nil,   nil,   nil,   nil,   195,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   195,   195,    21,
   195,   195,   195,   195,   195,   195,   195,   195,    21,   195,
   nil,   nil,    78,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    78,    78,    26,    78,    78,    78,    78,    78,    78,    78,
    78,    26,    78,   nil,   nil,   nil,   nil,    21,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   194,    21,    21,
    21,    21,    21,    21,    21,    21,   194,    21,   nil,   nil,
    26,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    26,    26,
   193,    26,    26,    26,    26,    26,    26,    26,    26,   193,
    26,   nil,   nil,   nil,   nil,   194,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   194,   194,   192,   194,   194,   194,   194,
   194,   194,   194,   194,   192,   194,   nil,   nil,   193,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   193,   193,   191,   193,
   193,   193,   193,   193,   193,   193,   193,   191,   193,   nil,
   nil,   nil,   nil,   192,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   192,   192,   190,   192,   192,   192,   192,   192,   192,
   192,   192,   190,   192,   nil,   nil,   191,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   191,   191,    77,   191,   191,   191,
   191,   191,   191,   191,   191,    77,   191,   nil,   nil,   nil,
   nil,   190,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   190,
   190,   188,   190,   190,   190,   190,   190,   190,   190,   190,
   188,   190,   nil,   nil,    77,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    77,    77,   186,    77,    77,    77,    77,    77,
    77,    77,    77,   186,    77,   nil,   nil,   nil,   nil,   188,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   188,   188,    68,
   188,   188,   188,   188,   188,   188,   188,   188,    68,   188,
   nil,   nil,   186,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   186,   186,    76,   186,   186,   186,   186,   186,   186,   186,
   186,    76,   186,   nil,   nil,   nil,   nil,    68,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    68,    68,   nil,    68,    68,
    68,    68,    68,    68,    68,    68,   179,    68,   nil,   nil,
    76,   nil,   nil,   nil,   nil,   179,   nil,   nil,    76,    76,
   nil,    76,    76,    76,    76,    76,    76,    76,    76,    75,
    76,   nil,   nil,   nil,   nil,   nil,   179,   nil,    75,   nil,
   nil,   nil,   nil,   179,   179,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   179,   179,    74,   179,   179,   179,   179,   179,
   179,   179,   179,    74,   179,   nil,   nil,    75,   nil,    74,
   nil,   nil,   nil,   nil,   nil,    75,    75,   133,    75,    75,
    75,    75,    75,    75,    75,    75,   133,    75,   nil,   nil,
   nil,   nil,    74,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    74,    74,    70,    74,    74,    74,    74,    74,    74,    74,
    74,    70,    74,   nil,   nil,   133,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   133,   133,   173,   133,   133,   133,   133,
   133,   133,   133,   133,   173,   133,   nil,   nil,   nil,   nil,
    70,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    70,    70,
   150,    70,    70,    70,    70,    70,    70,    70,    70,   150,
    70,   nil,   nil,   173,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   173,   173,    69,   173,   173,   173,   173,   173,   173,
   173,   173,    69,   173,   nil,   nil,   nil,   150,   150,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   150,   150,   nil,   150,
   150,   150,   150,   150,   150,   150,   150,   143,   150,   nil,
   nil,    69,   nil,   nil,   nil,   nil,   143,   nil,   nil,    69,
    69,   143,    69,    69,    69,    69,    69,    69,    69,    69,
    67,    69,   nil,   nil,   nil,   nil,   nil,   143,   nil,    67,
   nil,   nil,   nil,   nil,   143,   143,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   143,   143,   nil,   143,   143,   143,   143,
   143,   143,   143,   143,   184,   143,   nil,   nil,    67,   nil,
   nil,   nil,   nil,   184,   nil,   nil,    67,    67,   nil,    67,
    67,    67,    67,    67,    67,    67,    67,   nil,    67,   nil,
   nil,   nil,   nil,   nil,   184,   nil,   nil,   nil,   nil,   nil,
   nil,   184,   184,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   184,   184,   nil,   184,   184,   184,   184,   184,   184,   184,
   184,   nil,   184 ]

racc_action_pointer = [
     0,   235,   nil,   nil,   nil,   228,   nil,   204,   128,   219,
     9,   215,   172,   175,   nil,   nil,   186,   -12,   139,     7,
   -18,   453,   nil,   nil,   nil,   nil,   476,   nil,   nil,   nil,
   nil,   nil,   126,   nil,   nil,   164,   nil,   163,   162,   161,
   160,   118,   165,   nil,   nil,    -1,   nil,   nil,    95,   nil,
   nil,   151,   149,    -5,   139,   -17,   nil,   nil,   nil,   nil,
   nil,   115,   101,    -6,    83,   nil,   nil,   974,   693,   917,
   846,   nil,    94,    58,   798,   773,   716,   620,   428,    75,
   nil,    18,   nil,   nil,   158,   122,   182,   nil,    17,   nil,
   nil,   nil,   nil,   151,   195,   198,   -10,    12,    17,   nil,
    17,    20,    35,    20,   nil,    45,   348,    77,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    66,    67,    68,    69,
    71,    73,   nil,   nil,    83,    88,    -4,   nil,   nil,   nil,
   nil,    92,    98,   821,   nil,    67,    68,   nil,   nil,   nil,
   nil,    80,   123,   951,    83,   nil,   -25,   115,    93,   nil,
   894,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   138,
   137,   nil,   nil,   869,   135,   141,   nil,    67,   nil,   750,
   113,   143,   -12,   145,  1008,     4,   668,   158,   645,    -7,
   597,   572,   549,   524,   501,   405,   174,   nil,   nil,   380,
   nil,   nil,   190,   nil,   nil,   321,   nil,   nil,   nil,   289,
   197,   -39,   203,   nil,   nil,   nil,   nil,   177,   262,   202,
   214,   147,   183,    80,   nil,   nil,   nil,   181,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   217,   nil,   180,   182,
   183,   190,   nil,   nil,    61,   215,   nil,   224,   217,   223,
   nil,   nil,    13,   nil,   nil,   nil,   nil,   192,   nil,   nil ]

racc_action_default = [
  -149,  -149,    -1,    -2,    -3,    -5,   -20,  -149,  -149,  -149,
    -7,  -149,  -149,   -28,   -29,   -30,   -32,   -35,  -143,  -112,
  -115,  -149,  -117,  -118,  -119,  -120,  -149,  -122,  -123,  -124,
  -125,  -126,  -149,  -128,  -129,  -149,  -131,  -149,  -149,  -149,
  -149,  -140,  -149,  -141,  -142,  -149,  -146,  -147,  -149,   260,
    -4,  -149,  -149,  -149,  -149,   -40,   -41,   -43,   -44,   -83,
   -27,   -60,  -149,  -149,  -149,   -34,  -143,  -149,  -149,  -149,
  -149,  -116,  -149,  -149,  -149,  -149,  -149,  -149,  -149,  -138,
  -139,  -149,  -145,  -148,  -149,  -149,    -6,   -11,   -16,   -13,
   -14,   -15,   -21,  -149,  -149,  -149,  -149,  -149,  -149,   -48,
   -50,   -52,   -53,  -149,   -39,   -62,  -149,   -37,   -31,   -33,
  -110,  -111,  -113,  -114,  -121,  -127,  -149,  -149,  -149,  -149,
  -149,  -149,  -137,  -144,  -149,  -149,  -149,   -12,   -17,   -18,
   -22,  -149,   -25,  -149,   -45,  -149,  -149,   -49,   -51,   -54,
   -38,   -67,  -149,  -149,   -61,   -69,  -149,  -149,   -86,   -88,
  -149,   -91,   -92,   -93,   -95,   -96,   -97,   -98,   -99,  -100,
  -107,  -108,  -109,  -130,  -132,  -133,  -134,  -135,  -136,  -149,
  -149,   -10,   -23,  -149,  -149,   -77,   -46,  -149,   -36,  -149,
  -149,  -149,  -149,  -109,  -149,  -149,  -149,  -149,  -149,  -149,
  -149,  -149,  -149,  -149,  -149,  -149,  -149,   -42,   -82,  -149,
   -90,    -8,  -149,   -24,   -26,  -149,   -47,   -55,   -56,  -149,
  -149,   -68,   -63,   -65,   -66,   -19,   -94,   -87,  -149,  -149,
  -149,  -149,  -149,  -149,   -73,   -74,   -79,  -149,   -81,  -101,
  -102,  -103,  -104,  -105,  -106,   -89,  -149,   -76,   -57,  -149,
  -149,  -149,   -72,   -78,  -149,  -149,   -80,  -149,  -149,   -59,
   -85,   -64,  -149,   -71,   -75,    -9,   -58,  -149,   -70,   -84 ]

racc_goto_table = [
    65,    54,    17,   144,   131,    55,   174,    87,    15,   197,
   224,    92,    61,   214,   213,   112,   113,   127,    13,    60,
    72,     1,    93,   105,   141,   178,   222,    86,   226,   198,
   229,   230,   231,   232,   233,   234,    89,   206,   104,   207,
   182,   208,   242,    50,   248,   249,   212,   109,    10,   197,
   130,   107,     5,     4,     3,    55,   115,    17,   241,   217,
   243,   110,   111,   108,   235,   200,     2,    71,   117,   118,
   119,   120,   121,   214,   251,   nil,   211,   nil,   237,   nil,
   171,   197,   nil,   203,   253,   nil,   140,   nil,   132,   134,
   nil,   nil,   258,   nil,   nil,   nil,   245,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   238,   nil,   nil,    89,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   177,   nil,   175,   176,    55,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   183,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   132,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   175,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    72,   nil,   175,   nil,   nil,
   nil,   nil,   250,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   259 ]

racc_goto_check = [
    12,    15,    19,    38,    18,    29,    20,     9,    23,    13,
    48,    16,    25,    43,    42,    59,    59,    11,    21,    22,
    19,     1,    17,    26,    27,    28,    46,     8,    46,    31,
    46,    46,    46,    46,    46,    46,    12,    35,    12,    36,
    38,    37,    48,     7,    39,    40,    41,    12,     6,    13,
    16,    15,     5,     4,     3,    29,    12,    19,    46,    52,
    46,    19,    19,    23,    53,    54,     2,    62,    19,    19,
    19,    19,    19,    43,    42,   nil,    38,   nil,    20,   nil,
     9,    13,   nil,    18,    46,   nil,    12,   nil,    19,    29,
   nil,   nil,    46,   nil,   nil,   nil,    20,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    38,   nil,   nil,    12,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    15,   nil,    19,    29,    29,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    19,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    19,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    19,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    19,   nil,    19,   nil,   nil,
   nil,   nil,    12,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    12 ]

racc_goto_pointer = [
   nil,    21,    66,    54,    53,    52,    43,    33,   -26,   -46,
   nil,   -71,   -17,  -138,   nil,   -11,   -43,   -32,   -90,    -6,
  -127,    10,     6,     0,   nil,    -1,   -38,   -81,  -116,    -7,
   nil,  -118,   nil,   nil,   nil,  -140,  -138,  -136,  -103,  -195,
  -194,  -134,  -166,  -167,   nil,   nil,  -160,   nil,  -177,   nil,
   nil,   nil,  -125,  -135,   -85,   nil,   nil,   nil,   nil,   -54,
   nil,   nil,    46,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   181,   nil,   nil,   nil,   nil,
    88,   nil,    33,   145,     6,   nil,   nil,   nil,   nil,   162,
   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,   nil,    34,
    56,   225,    57,    58,    98,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    24,   161,   155,   146,   156,   nil,   157,
   158,   159,   148,   149,   151,   152,   153,   154,   160,    19,
    20,    21,    22,    23,    25,    27,    28,    29,    30,    32,
    36,    46,    47 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 67, :_reduce_none,
  1, 68, :_reduce_none,
  1, 68, :_reduce_none,
  3, 69, :_reduce_4,
  0, 72, :_reduce_none,
  3, 72, :_reduce_6,
  0, 73, :_reduce_none,
  5, 73, :_reduce_8,
  8, 73, :_reduce_9,
  3, 74, :_reduce_10,
  1, 74, :_reduce_none,
  2, 75, :_reduce_12,
  1, 76, :_reduce_none,
  1, 76, :_reduce_14,
  1, 76, :_reduce_15,
  0, 77, :_reduce_16,
  1, 77, :_reduce_17,
  1, 77, :_reduce_18,
  3, 79, :_reduce_19,
  1, 71, :_reduce_none,
  4, 70, :_reduce_21,
  5, 70, :_reduce_22,
  3, 83, :_reduce_23,
  3, 84, :_reduce_24,
  1, 84, :_reduce_none,
  4, 82, :_reduce_26,
  3, 80, :_reduce_27,
  2, 80, :_reduce_28,
  1, 87, :_reduce_29,
  1, 87, :_reduce_30,
  3, 89, :_reduce_31,
  1, 89, :_reduce_none,
  3, 90, :_reduce_33,
  2, 90, :_reduce_34,
  1, 90, :_reduce_none,
  4, 88, :_reduce_36,
  2, 91, :_reduce_37,
  3, 81, :_reduce_38,
  2, 81, :_reduce_39,
  1, 81, :_reduce_none,
  1, 81, :_reduce_none,
  1, 97, :_reduce_none,
  1, 96, :_reduce_none,
  1, 96, :_reduce_none,
  3, 98, :_reduce_45,
  4, 98, :_reduce_46,
  5, 99, :_reduce_47,
  1, 100, :_reduce_48,
  2, 100, :_reduce_49,
  1, 100, :_reduce_50,
  2, 100, :_reduce_51,
  1, 100, :_reduce_52,
  1, 100, :_reduce_53,
  2, 100, :_reduce_54,
  1, 101, :_reduce_none,
  1, 101, :_reduce_none,
  2, 102, :_reduce_57,
  4, 103, :_reduce_58,
  1, 105, :_reduce_none,
  0, 92, :_reduce_none,
  2, 92, :_reduce_61,
  0, 93, :_reduce_none,
  3, 93, :_reduce_63,
  3, 107, :_reduce_64,
  1, 107, :_reduce_none,
  1, 108, :_reduce_none,
  0, 94, :_reduce_none,
  2, 94, :_reduce_68,
  1, 110, :_reduce_none,
  6, 111, :_reduce_70,
  5, 111, :_reduce_71,
  4, 113, :_reduce_72,
  3, 113, :_reduce_73,
  1, 114, :_reduce_none,
  3, 114, :_reduce_75,
  3, 86, :_reduce_76,
  1, 86, :_reduce_none,
  4, 115, :_reduce_78,
  3, 115, :_reduce_79,
  4, 116, :_reduce_80,
  3, 116, :_reduce_81,
  2, 117, :_reduce_82,
  1, 95, :_reduce_83,
  3, 106, :_reduce_84,
  1, 106, :_reduce_none,
  1, 104, :_reduce_none,
  3, 104, :_reduce_87,
  1, 118, :_reduce_none,
  3, 118, :_reduce_89,
  2, 119, :_reduce_90,
  1, 119, :_reduce_none,
  1, 120, :_reduce_none,
  1, 121, :_reduce_none,
  3, 121, :_reduce_94,
  1, 122, :_reduce_none,
  1, 122, :_reduce_none,
  1, 122, :_reduce_none,
  1, 122, :_reduce_none,
  1, 122, :_reduce_none,
  1, 122, :_reduce_none,
  3, 123, :_reduce_101,
  3, 123, :_reduce_102,
  3, 123, :_reduce_103,
  3, 123, :_reduce_104,
  3, 123, :_reduce_105,
  3, 123, :_reduce_106,
  1, 112, :_reduce_none,
  1, 112, :_reduce_none,
  1, 124, :_reduce_none,
  3, 85, :_reduce_110,
  3, 85, :_reduce_111,
  1, 85, :_reduce_none,
  3, 125, :_reduce_113,
  3, 125, :_reduce_114,
  1, 125, :_reduce_none,
  2, 126, :_reduce_116,
  1, 126, :_reduce_none,
  1, 128, :_reduce_none,
  1, 128, :_reduce_none,
  1, 128, :_reduce_none,
  3, 128, :_reduce_121,
  1, 129, :_reduce_none,
  1, 129, :_reduce_none,
  1, 131, :_reduce_none,
  1, 131, :_reduce_none,
  1, 132, :_reduce_126,
  3, 109, :_reduce_127,
  1, 109, :_reduce_none,
  1, 135, :_reduce_none,
  4, 130, :_reduce_130,
  1, 130, :_reduce_none,
  4, 136, :_reduce_132,
  4, 136, :_reduce_133,
  4, 136, :_reduce_134,
  4, 136, :_reduce_135,
  4, 136, :_reduce_136,
  3, 133, :_reduce_137,
  2, 133, :_reduce_138,
  2, 133, :_reduce_139,
  1, 133, :_reduce_140,
  1, 127, :_reduce_141,
  1, 127, :_reduce_142,
  1, 78, :_reduce_143,
  3, 134, :_reduce_144,
  2, 134, :_reduce_145,
  1, 134, :_reduce_none,
  1, 137, :_reduce_none,
  2, 138, :_reduce_148 ]

racc_reduce_n = 149

racc_shift_n = 260

racc_token_table = {
  false => 0,
  :error => 1,
  :ORDER => 2,
  :BY => 3,
  :FETCH => 4,
  :FIRST => 5,
  :unsigned_integer => 6,
  :ROWS => 7,
  :ONLY => 8,
  :OFFSET => 9,
  :NEXT => 10,
  :comma => 11,
  :built_in_function => 12,
  :ASC => 13,
  :DESC => 14,
  :left_paren => 15,
  :right_paren => 16,
  :INSERT => 17,
  :INTO => 18,
  :VALUES => 19,
  :SELECT => 20,
  :asterisk => 21,
  :AS => 22,
  :FROM => 23,
  :CROSS => 24,
  :JOIN => 25,
  :INNER => 26,
  :LEFT => 27,
  :OUTER => 28,
  :RIGHT => 29,
  :FULL => 30,
  :ON => 31,
  :USING => 32,
  :WHERE => 33,
  :GROUP => 34,
  :HAVING => 35,
  :NOT => 36,
  :BETWEEN => 37,
  :AND => 38,
  :IN => 39,
  :LIKE => 40,
  :IS => 41,
  :NULL => 42,
  :EXISTS => 43,
  :identifier => 44,
  :OR => 45,
  :equals_operator => 46,
  :not_equals_operator => 47,
  :less_than_operator => 48,
  :greater_than_operator => 49,
  :less_than_or_equals_operator => 50,
  :greater_than_or_equals_operator => 51,
  :plus_sign => 52,
  :minus_sign => 53,
  :solidus => 54,
  :CURRENT_USER => 55,
  :period => 56,
  :COUNT => 57,
  :AVG => 58,
  :MAX => 59,
  :MIN => 60,
  :SUM => 61,
  :quote => 62,
  :character_string_literal => 63,
  :DATE => 64,
  :date_string => 65 }

racc_nt_base = 66

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "ORDER",
  "BY",
  "FETCH",
  "FIRST",
  "unsigned_integer",
  "ROWS",
  "ONLY",
  "OFFSET",
  "NEXT",
  "comma",
  "built_in_function",
  "ASC",
  "DESC",
  "left_paren",
  "right_paren",
  "INSERT",
  "INTO",
  "VALUES",
  "SELECT",
  "asterisk",
  "AS",
  "FROM",
  "CROSS",
  "JOIN",
  "INNER",
  "LEFT",
  "OUTER",
  "RIGHT",
  "FULL",
  "ON",
  "USING",
  "WHERE",
  "GROUP",
  "HAVING",
  "NOT",
  "BETWEEN",
  "AND",
  "IN",
  "LIKE",
  "IS",
  "NULL",
  "EXISTS",
  "identifier",
  "OR",
  "equals_operator",
  "not_equals_operator",
  "less_than_operator",
  "greater_than_operator",
  "less_than_or_equals_operator",
  "greater_than_or_equals_operator",
  "plus_sign",
  "minus_sign",
  "solidus",
  "CURRENT_USER",
  "period",
  "COUNT",
  "AVG",
  "MAX",
  "MIN",
  "SUM",
  "quote",
  "character_string_literal",
  "DATE",
  "date_string",
  "$start",
  "direct_sql_statement",
  "direct_sql_data_statement",
  "direct_select_statement_multiple_rows",
  "insert_specification",
  "query_expression",
  "order_by_clause",
  "fetch_only_clause",
  "sort_specification_list",
  "sort_specification",
  "sort_key",
  "ordering_specification",
  "column_name",
  "subquery",
  "query_specification",
  "table_reference",
  "value_list",
  "column_list",
  "in_column_list",
  "value_expression",
  "in_value_list",
  "select_list",
  "table_expression",
  "select_sublist",
  "derived_column",
  "from_clause",
  "where_clause",
  "group_by_clause",
  "having_clause",
  "table_name",
  "joined_table",
  "table_subquery",
  "cross_join",
  "qualified_join",
  "join_type",
  "join_specification",
  "join_condition",
  "named_columns_join",
  "search_condition",
  "join_column_list",
  "column_name_list",
  "grouping_column_reference_list",
  "grouping_column_reference",
  "column_reference",
  "row_subquery",
  "between_predicate",
  "row_value_constructor",
  "in_predicate",
  "in_predicate_value",
  "like_predicate",
  "null_predicate",
  "exists_predicate",
  "boolean_term",
  "boolean_factor",
  "boolean_test",
  "boolean_primary",
  "predicate",
  "comparison_predicate",
  "row_value_constructor_element",
  "term",
  "factor",
  "sign",
  "value_expression_primary",
  "unsigned_value_specification",
  "set_function_specification",
  "unsigned_literal",
  "general_value_specification",
  "unsigned_numeric_literal",
  "general_literal",
  "qualifier",
  "general_set_function",
  "datetime_literal",
  "date_literal" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

module_eval(<<'.,.,', 'parser.racc', 13)
  def _reduce_4(val, _values, result)
     result = SQLParser::Statement::DirectSelect.new(val[0], val[1], val[2]) 
    result
  end
.,.,

# reduce 5 omitted

module_eval(<<'.,.,', 'parser.racc', 18)
  def _reduce_6(val, _values, result)
     result = SQLParser::Statement::OrderBy.new(val[2]) 
    result
  end
.,.,

# reduce 7 omitted

module_eval(<<'.,.,', 'parser.racc', 22)
  def _reduce_8(val, _values, result)
     result = SQLParser::Statement::FetchOnly.new(0, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 23)
  def _reduce_9(val, _values, result)
     result = SQLParser::Statement::FetchOnly.new(val[1], val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 26)
  def _reduce_10(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 11 omitted

module_eval(<<'.,.,', 'parser.racc', 30)
  def _reduce_12(val, _values, result)
     result = val[1].new(val[0]) 
    result
  end
.,.,

# reduce 13 omitted

module_eval(<<'.,.,', 'parser.racc', 34)
  def _reduce_14(val, _values, result)
     result = SQLParser::Statement::BuiltInFunction.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 35)
  def _reduce_15(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 38)
  def _reduce_16(val, _values, result)
     result = SQLParser::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 39)
  def _reduce_17(val, _values, result)
     result = SQLParser::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 40)
  def _reduce_18(val, _values, result)
     result = SQLParser::Statement::Descending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 45)
  def _reduce_19(val, _values, result)
     result = SQLParser::Statement::Subquery.new(val[1]) 
    result
  end
.,.,

# reduce 20 omitted

module_eval(<<'.,.,', 'parser.racc', 51)
  def _reduce_21(val, _values, result)
     result = SQLParser::Statement::Insert.new(val[2], nil, val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 52)
  def _reduce_22(val, _values, result)
     result = SQLParser::Statement::Insert.new(val[2], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 55)
  def _reduce_23(val, _values, result)
     result = SQLParser::Statement::InColumnList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 58)
  def _reduce_24(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 25 omitted

module_eval(<<'.,.,', 'parser.racc', 62)
  def _reduce_26(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 65)
  def _reduce_27(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 66)
  def _reduce_28(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 69)
  def _reduce_29(val, _values, result)
     result = SQLParser::Statement::All.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 70)
  def _reduce_30(val, _values, result)
     result = SQLParser::Statement::SelectList.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 73)
  def _reduce_31(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 32 omitted

module_eval(<<'.,.,', 'parser.racc', 77)
  def _reduce_33(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 78)
  def _reduce_34(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 35 omitted

module_eval(<<'.,.,', 'parser.racc', 82)
  def _reduce_36(val, _values, result)
     result = SQLParser::Statement::TableExpression.new(val[0], val[1], val[2], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 85)
  def _reduce_37(val, _values, result)
     result = SQLParser::Statement::FromClause.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 88)
  def _reduce_38(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 89)
  def _reduce_39(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 40 omitted

# reduce 41 omitted

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

module_eval(<<'.,.,', 'parser.racc', 101)
  def _reduce_45(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 102)
  def _reduce_46(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 105)
  def _reduce_47(val, _values, result)
     result = val[1].new(val[0], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 108)
  def _reduce_48(val, _values, result)
     result = SQLParser::Statement::InnerJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 109)
  def _reduce_49(val, _values, result)
     result = SQLParser::Statement::LeftOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 110)
  def _reduce_50(val, _values, result)
     result = SQLParser::Statement::LeftJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 111)
  def _reduce_51(val, _values, result)
     result = SQLParser::Statement::RightOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 112)
  def _reduce_52(val, _values, result)
     result = SQLParser::Statement::RightJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 113)
  def _reduce_53(val, _values, result)
     result = SQLParser::Statement::FullJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 114)
  def _reduce_54(val, _values, result)
     result = SQLParser::Statement::FullOuterJoin 
    result
  end
.,.,

# reduce 55 omitted

# reduce 56 omitted

module_eval(<<'.,.,', 'parser.racc', 121)
  def _reduce_57(val, _values, result)
     result = SQLParser::Statement::On.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 124)
  def _reduce_58(val, _values, result)
     result = SQLParser::Statement::Using.new(val[2]) 
    result
  end
.,.,

# reduce 59 omitted

# reduce 60 omitted

module_eval(<<'.,.,', 'parser.racc', 131)
  def _reduce_61(val, _values, result)
     result = SQLParser::Statement::WhereClause.new(val[1]) 
    result
  end
.,.,

# reduce 62 omitted

module_eval(<<'.,.,', 'parser.racc', 135)
  def _reduce_63(val, _values, result)
     result = SQLParser::Statement::GroupByClause.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 138)
  def _reduce_64(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 65 omitted

# reduce 66 omitted

# reduce 67 omitted

module_eval(<<'.,.,', 'parser.racc', 146)
  def _reduce_68(val, _values, result)
     result = SQLParser::Statement::HavingClause.new(val[1]) 
    result
  end
.,.,

# reduce 69 omitted

module_eval(<<'.,.,', 'parser.racc', 153)
  def _reduce_70(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Between.new(val[0], val[3], val[5])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 154)
  def _reduce_71(val, _values, result)
     result = SQLParser::Statement::Between.new(val[0], val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 157)
  def _reduce_72(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::In.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 158)
  def _reduce_73(val, _values, result)
     result = SQLParser::Statement::In.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 74 omitted

module_eval(<<'.,.,', 'parser.racc', 162)
  def _reduce_75(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 165)
  def _reduce_76(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 77 omitted

module_eval(<<'.,.,', 'parser.racc', 172)
  def _reduce_78(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Like.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 173)
  def _reduce_79(val, _values, result)
     result = SQLParser::Statement::Like.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 176)
  def _reduce_80(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 177)
  def _reduce_81(val, _values, result)
     result = SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 180)
  def _reduce_82(val, _values, result)
     result = SQLParser::Statement::Exists.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 184)
  def _reduce_83(val, _values, result)
     result = SQLParser::Statement::Table.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 187)
  def _reduce_84(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 85 omitted

# reduce 86 omitted

module_eval(<<'.,.,', 'parser.racc', 193)
  def _reduce_87(val, _values, result)
     result = SQLParser::Statement::Or.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 88 omitted

module_eval(<<'.,.,', 'parser.racc', 197)
  def _reduce_89(val, _values, result)
     result = SQLParser::Statement::And.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 200)
  def _reduce_90(val, _values, result)
     result = SQLParser::Statement::Not.new(val[1]) 
    result
  end
.,.,

# reduce 91 omitted

# reduce 92 omitted

# reduce 93 omitted

module_eval(<<'.,.,', 'parser.racc', 208)
  def _reduce_94(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 95 omitted

# reduce 96 omitted

# reduce 97 omitted

# reduce 98 omitted

# reduce 99 omitted

# reduce 100 omitted

module_eval(<<'.,.,', 'parser.racc', 219)
  def _reduce_101(val, _values, result)
     result = SQLParser::Statement::Equals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 220)
  def _reduce_102(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Equals.new(val[0], val[2])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 221)
  def _reduce_103(val, _values, result)
     result = SQLParser::Statement::Less.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 222)
  def _reduce_104(val, _values, result)
     result = SQLParser::Statement::Greater.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 223)
  def _reduce_105(val, _values, result)
     result = SQLParser::Statement::LessOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 224)
  def _reduce_106(val, _values, result)
     result = SQLParser::Statement::GreaterOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 107 omitted

# reduce 108 omitted

# reduce 109 omitted

module_eval(<<'.,.,', 'parser.racc', 234)
  def _reduce_110(val, _values, result)
     result = SQLParser::Statement::Add.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 235)
  def _reduce_111(val, _values, result)
     result = SQLParser::Statement::Subtract.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 112 omitted

module_eval(<<'.,.,', 'parser.racc', 239)
  def _reduce_113(val, _values, result)
     result = SQLParser::Statement::Multiply.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 240)
  def _reduce_114(val, _values, result)
     result = SQLParser::Statement::Divide.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 115 omitted

module_eval(<<'.,.,', 'parser.racc', 244)
  def _reduce_116(val, _values, result)
     result = val[0].new(val[1]) 
    result
  end
.,.,

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

module_eval(<<'.,.,', 'parser.racc', 251)
  def _reduce_121(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

module_eval(<<'.,.,', 'parser.racc', 262)
  def _reduce_126(val, _values, result)
     result = SQLParser::Statement::CurrentUser.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 265)
  def _reduce_127(val, _values, result)
     result = SQLParser::Statement::QualifiedColumn.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 128 omitted

# reduce 129 omitted

module_eval(<<'.,.,', 'parser.racc', 272)
  def _reduce_130(val, _values, result)
     result = SQLParser::Statement::Count.new(SQLParser::Statement::All.new) 
    result
  end
.,.,

# reduce 131 omitted

module_eval(<<'.,.,', 'parser.racc', 276)
  def _reduce_132(val, _values, result)
     result = SQLParser::Statement::Count.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 277)
  def _reduce_133(val, _values, result)
     result = SQLParser::Statement::Average.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 278)
  def _reduce_134(val, _values, result)
     result = SQLParser::Statement::Maximum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 279)
  def _reduce_135(val, _values, result)
     result = SQLParser::Statement::Minimum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 280)
  def _reduce_136(val, _values, result)
     result = SQLParser::Statement::Sum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 284)
  def _reduce_137(val, _values, result)
     result = SQLParser::Statement::Float.new("#{val[0]}.#{val[2]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 285)
  def _reduce_138(val, _values, result)
     result = SQLParser::Statement::Float.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 286)
  def _reduce_139(val, _values, result)
     result = SQLParser::Statement::Float.new("0.#{val[1]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 287)
  def _reduce_140(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 290)
  def _reduce_141(val, _values, result)
     result = SQLParser::Statement::UnaryPlus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 291)
  def _reduce_142(val, _values, result)
     result = SQLParser::Statement::UnaryMinus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 295)
  def _reduce_143(val, _values, result)
     result = SQLParser::Statement::Column.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 299)
  def _reduce_144(val, _values, result)
     result = SQLParser::Statement::String.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 300)
  def _reduce_145(val, _values, result)
     result = SQLParser::Statement::String.new('') 
    result
  end
.,.,

# reduce 146 omitted

# reduce 147 omitted

module_eval(<<'.,.,', 'parser.racc', 307)
  def _reduce_148(val, _values, result)
     result = SQLParser::Statement::Date.new(val[1]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module SQLParser
