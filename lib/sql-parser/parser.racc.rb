#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require File.dirname(__FILE__) + '/parser.rex.rb'

module SQLParser
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 334)

def self.parse(sql)
  new.scan_str(sql)
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    43,   202,   243,    72,   221,    67,    92,    92,   104,    28,
   232,    64,    91,    91,    53,     7,   233,   135,     8,    54,
    43,   223,   166,   224,   225,    83,    82,    69,   167,   226,
    69,    70,    71,   168,   187,   128,   129,    73,   169,    20,
    43,   170,   171,   -85,   -85,    69,    69,    45,    46,    28,
    33,   172,    37,    39,    40,    41,    42,    44,    47,   204,
    50,   173,    43,    61,   175,   176,   133,    45,    46,    61,
    33,    28,    37,    39,    40,    41,    42,    44,    47,    20,
    50,    61,   182,   183,    96,   187,   138,    45,    46,   199,
    33,   126,    37,    39,    40,    41,    42,    44,    47,    43,
    50,    20,   203,   125,   206,   207,   124,   209,   226,    45,
    46,   210,    33,   123,    37,    39,    40,    41,    42,    44,
    47,    43,    50,    69,    20,   220,   115,   115,   137,   142,
    28,    69,   228,    61,   107,    86,    14,    16,   204,    85,
    84,    43,    69,    81,    80,     8,    45,    46,    79,    33,
    28,    37,    39,    40,    41,    42,    44,    47,    78,    50,
    20,    43,    77,   244,    76,   139,   247,   187,    45,    46,
    28,    33,   248,    37,    39,    40,    41,    42,    44,    47,
    20,    50,   203,   -85,   228,    66,   136,   252,    45,    46,
    61,    33,   254,    37,    39,    40,    41,    42,    44,    47,
    20,    50,   255,   256,    55,   258,   187,    69,    45,    46,
    20,    33,   263,    37,    39,    40,    41,    42,    44,    47,
    43,    50,    97,    51,   265,    12,    11,   267,   268,    28,
   269,    97,   270,     9,     8,    69,    98,   nil,   100,   101,
    43,   102,   103,   214,   215,    98,   nil,   100,   101,    28,
   102,   103,   nil,   nil,     8,   nil,   nil,   nil,   nil,    20,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    45,    46,   nil,
    33,   nil,    37,    39,    40,    41,    42,    44,    47,    20,
    50,   nil,   nil,   nil,   nil,   nil,   nil,    45,    46,   nil,
    33,   nil,    37,    39,    40,    41,    42,    44,    47,    43,
    50,    97,   nil,   nil,   nil,    95,   nil,   nil,    28,    96,
   nil,   nil,   nil,   nil,    14,    98,   nil,   100,   101,    43,
   102,   103,   188,   189,   nil,   190,   191,   192,   226,   nil,
   nil,   nil,   193,   194,   195,   196,   197,   198,    20,   nil,
   nil,    43,   nil,   nil,   nil,   nil,    45,    46,   nil,    33,
   226,    37,    39,    40,    41,    42,    44,    47,   204,    50,
   nil,   nil,   nil,   nil,   nil,   nil,    45,    46,   nil,    33,
   nil,    37,    39,    40,    41,    42,    44,    47,    43,    50,
   204,   nil,   nil,   nil,   nil,   nil,   nil,   143,    45,    46,
   nil,    33,     8,    37,    39,    40,    41,    42,    44,    47,
   nil,    50,   nil,   nil,   nil,   nil,    43,   nil,   nil,   151,
   nil,   nil,   nil,   nil,   nil,   143,   147,   148,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    45,    46,   nil,    33,   nil,
    37,    39,    40,    41,    42,    44,    47,   151,    50,    43,
   nil,   nil,   nil,   nil,   147,   148,   nil,   nil,   143,   nil,
   nil,   nil,   nil,    45,    46,   nil,    33,   nil,    37,    39,
    40,    41,    42,    44,    47,    43,    50,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    28,   nil,   nil,   147,   204,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    45,    46,   nil,    33,
   nil,    37,    39,    40,    41,    42,    44,    47,    43,    50,
   nil,   nil,   nil,   nil,    20,   nil,   nil,    28,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    33,   nil,    37,    39,    40,
    41,    42,    44,    47,    43,    50,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    28,   nil,   nil,   nil,    20,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    45,    46,   nil,    33,   nil,
    37,    39,    40,    41,    42,    44,    47,    43,    50,   nil,
   nil,   nil,   nil,    20,   nil,   nil,    28,   nil,   nil,   nil,
   nil,    45,    46,   nil,    33,   nil,    37,    39,    40,    41,
    42,    44,    47,   nil,    50,    43,   nil,  -141,  -141,   nil,
  -141,  -141,  -141,   nil,   143,   nil,    20,  -141,  -141,  -141,
  -141,  -141,  -141,   nil,    45,    46,   nil,    33,   nil,    37,
    39,    40,    41,    42,    44,    47,   151,    50,    43,   nil,
   nil,   nil,   nil,   147,   148,   nil,   nil,    28,   nil,   nil,
   nil,   nil,    45,    46,   nil,    33,   nil,    37,    39,    40,
    41,    42,    44,    47,    43,    50,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   226,   nil,   nil,   nil,    20,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    45,    46,   nil,    33,   nil,
    37,    39,    40,    41,    42,    44,    47,    43,    50,   nil,
   nil,   nil,   nil,   204,   nil,   nil,   226,   nil,   nil,   nil,
   nil,    45,    46,   nil,    33,   nil,    37,    39,    40,    41,
    42,    44,    47,    43,    50,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   226,   nil,   nil,   nil,   204,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    45,    46,   nil,    33,   nil,    37,
    39,    40,    41,    42,    44,    47,    43,    50,   nil,   nil,
   nil,   nil,   204,   nil,   nil,   226,   nil,   nil,   nil,   nil,
    45,    46,   nil,    33,   nil,    37,    39,    40,    41,    42,
    44,    47,    43,    50,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   226,   nil,   nil,   nil,   204,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    45,    46,   nil,    33,   nil,    37,    39,
    40,    41,    42,    44,    47,    43,    50,   nil,   nil,   nil,
   nil,   204,   nil,   nil,   226,   nil,   nil,   nil,   nil,    45,
    46,   nil,    33,   nil,    37,    39,    40,    41,    42,    44,
    47,    43,    50,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    28,   nil,   nil,   nil,   204,   nil,   117,   nil,   nil,   nil,
   nil,   nil,    45,    46,   nil,    33,   nil,    37,    39,    40,
    41,    42,    44,    47,    43,    50,   nil,   nil,   nil,   nil,
    20,   nil,   nil,    28,   nil,   nil,   nil,   nil,    45,    46,
   nil,    33,   nil,    37,    39,    40,    41,    42,    44,    47,
    43,    50,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    28,
   nil,   nil,   nil,    20,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    45,    46,   nil,    33,   nil,    37,    39,    40,    41,
    42,    44,    47,    43,    50,   nil,   nil,   nil,   nil,    20,
   nil,   nil,    28,   nil,   nil,   nil,   nil,    45,    46,   nil,
    33,   nil,    37,    39,    40,    41,    42,    44,    47,    43,
    50,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   226,   nil,
   nil,   nil,    20,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    45,    46,   nil,    33,   nil,    37,    39,    40,    41,    42,
    44,    47,    43,    50,   nil,   nil,   nil,   nil,   204,   nil,
   nil,    28,   nil,   nil,   nil,   nil,    45,    46,   nil,    33,
   nil,    37,    39,    40,    41,    42,    44,    47,    43,    50,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   226,   nil,   nil,
   nil,    20,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    45,
    46,   nil,    33,   nil,    37,    39,    40,    41,    42,    44,
    47,    43,    50,   nil,   nil,   nil,   nil,   204,   nil,   nil,
    28,   nil,   nil,   nil,   nil,    45,    46,   nil,    33,   nil,
    37,    39,    40,    41,    42,    44,    47,   nil,    50,    43,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   143,   nil,
    20,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    45,    46,
   nil,    33,   nil,    37,    39,    40,    41,    42,    44,    47,
   151,    50,    43,   nil,   nil,   nil,   nil,   147,   148,   nil,
   nil,    28,   nil,   nil,   nil,   nil,    45,    46,   nil,    33,
   nil,    37,    39,    40,    41,    42,    44,    47,    43,    50,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    28,   nil,   nil,
   nil,    20,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    45,
    46,   nil,    33,   nil,    37,    39,    40,    41,    42,    44,
    47,    43,    50,   nil,   nil,   nil,   nil,    20,   nil,   nil,
    28,   nil,   nil,   nil,   nil,    45,    46,   nil,    33,   nil,
    37,    39,    40,    41,    42,    44,    47,   nil,    50,    43,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   143,   nil,
    20,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    45,    46,
   nil,    33,   nil,    37,    39,    40,    41,    42,    44,    47,
   151,    50,    43,   nil,   nil,   nil,   nil,   147,   148,   nil,
   nil,   143,   nil,   nil,   nil,   nil,    45,    46,   nil,    33,
   nil,    37,    39,    40,    41,    42,    44,    47,   nil,    50,
   nil,   nil,   nil,   151,   nil,   nil,   nil,   nil,   nil,   nil,
   147,   148,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    45,
    46,   nil,    33,   nil,    37,    39,    40,    41,    42,    44,
    47,   nil,    50 ]

racc_action_check = [
    71,   148,   204,    22,   185,    19,   126,    55,    57,    71,
   192,    13,   126,    55,    10,     0,   192,    98,     0,    10,
   263,   188,   117,   188,   188,    47,    47,    19,   118,   263,
    57,    21,    21,   119,   185,    89,    89,    22,   120,    71,
   256,   121,   122,   148,   204,   126,    55,    71,    71,   256,
    71,   124,    71,    71,    71,    71,    71,    71,    71,   263,
    71,   125,   133,    97,   131,   132,    96,   263,   263,   135,
   263,   133,   263,   263,   263,   263,   263,   263,   263,   256,
   263,   136,   141,   142,    94,   144,   102,   256,   256,   147,
   256,    87,   256,   256,   256,   256,   256,   256,   256,   252,
   256,   133,   149,    86,   172,   173,    85,   177,   252,   133,
   133,   178,   133,    82,   133,   133,   133,   133,   133,   133,
   133,     8,   133,    76,   183,   184,    75,   186,   101,   106,
     8,    67,   190,    64,    63,    54,     8,     8,   252,    53,
    50,    95,   104,    42,    41,   199,   252,   252,    40,   252,
    95,   252,   252,   252,   252,   252,   252,   252,    39,   252,
     8,   243,    37,   207,    34,   103,   215,   216,     8,     8,
   243,     8,   217,     8,     8,     8,     8,     8,     8,     8,
    95,     8,   222,    20,   224,    18,    99,   227,    95,    95,
    12,    95,   232,    95,    95,    95,    95,    95,    95,    95,
   243,    95,   240,   241,    11,   244,   246,   247,   243,   243,
   248,   243,   249,   243,   243,   243,   243,   243,   243,   243,
   228,   243,   180,     9,   253,     7,     5,   257,   258,   228,
   259,   108,   260,     1,   228,   270,   180,   nil,   180,   180,
   226,   180,   180,   180,   180,   108,   nil,   108,   108,   226,
   108,   108,   nil,   nil,   226,   nil,   nil,   nil,   nil,   228,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   228,   228,   nil,
   228,   nil,   228,   228,   228,   228,   228,   228,   228,   226,
   228,   nil,   nil,   nil,   nil,   nil,   nil,   226,   226,   nil,
   226,   nil,   226,   226,   226,   226,   226,   226,   226,    16,
   226,    56,   nil,   nil,   nil,    56,   nil,   nil,    16,    56,
   nil,   nil,   nil,   nil,    16,    56,   nil,    56,    56,   225,
    56,    56,   146,   146,   nil,   146,   146,   146,   225,   nil,
   nil,   nil,   146,   146,   146,   146,   146,   146,    16,   nil,
   nil,   223,   nil,   nil,   nil,   nil,    16,    16,   nil,    16,
   223,    16,    16,    16,    16,    16,    16,    16,   225,    16,
   nil,   nil,   nil,   nil,   nil,   nil,   225,   225,   nil,   225,
   nil,   225,   225,   225,   225,   225,   225,   225,   143,   225,
   223,   nil,   nil,   nil,   nil,   nil,   nil,   143,   223,   223,
   nil,   223,   143,   223,   223,   223,   223,   223,   223,   223,
   nil,   223,   nil,   nil,   nil,   nil,   214,   nil,   nil,   143,
   nil,   nil,   nil,   nil,   nil,   214,   143,   143,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   143,   143,   nil,   143,   nil,
   143,   143,   143,   143,   143,   143,   143,   214,   143,   151,
   nil,   nil,   nil,   nil,   214,   214,   nil,   nil,   151,   nil,
   nil,   nil,   nil,   214,   214,   nil,   214,   nil,   214,   214,
   214,   214,   214,   214,   214,    23,   214,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    23,   nil,   nil,   151,   151,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   151,   151,   nil,   151,
   nil,   151,   151,   151,   151,   151,   151,   151,    28,   151,
   nil,   nil,   nil,   nil,    23,   nil,   nil,    28,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    23,   nil,    23,    23,    23,
    23,    23,    23,    23,   210,    23,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   210,   nil,   nil,   nil,    28,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    28,    28,   nil,    28,   nil,
    28,    28,    28,    28,    28,    28,    28,   176,    28,   nil,
   nil,   nil,   nil,   210,   nil,   nil,   176,   nil,   nil,   nil,
   nil,   210,   210,   nil,   210,   nil,   210,   210,   210,   210,
   210,   210,   210,   nil,   210,   203,   nil,   255,   255,   nil,
   255,   255,   255,   nil,   203,   nil,   176,   255,   255,   255,
   255,   255,   255,   nil,   176,   176,   nil,   176,   nil,   176,
   176,   176,   176,   176,   176,   176,   203,   176,   202,   nil,
   nil,   nil,   nil,   203,   203,   nil,   nil,   202,   nil,   nil,
   nil,   nil,   203,   203,   nil,   203,   nil,   203,   203,   203,
   203,   203,   203,   203,   198,   203,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   198,   nil,   nil,   nil,   202,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   202,   202,   nil,   202,   nil,
   202,   202,   202,   202,   202,   202,   202,   197,   202,   nil,
   nil,   nil,   nil,   198,   nil,   nil,   197,   nil,   nil,   nil,
   nil,   198,   198,   nil,   198,   nil,   198,   198,   198,   198,
   198,   198,   198,   196,   198,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   196,   nil,   nil,   nil,   197,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   197,   197,   nil,   197,   nil,   197,
   197,   197,   197,   197,   197,   197,   195,   197,   nil,   nil,
   nil,   nil,   196,   nil,   nil,   195,   nil,   nil,   nil,   nil,
   196,   196,   nil,   196,   nil,   196,   196,   196,   196,   196,
   196,   196,   194,   196,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   194,   nil,   nil,   nil,   195,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   195,   195,   nil,   195,   nil,   195,   195,
   195,   195,   195,   195,   195,   193,   195,   nil,   nil,   nil,
   nil,   194,   nil,   nil,   193,   nil,   nil,   nil,   nil,   194,
   194,   nil,   194,   nil,   194,   194,   194,   194,   194,   194,
   194,    77,   194,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    77,   nil,   nil,   nil,   193,   nil,    77,   nil,   nil,   nil,
   nil,   nil,   193,   193,   nil,   193,   nil,   193,   193,   193,
   193,   193,   193,   193,    81,   193,   nil,   nil,   nil,   nil,
    77,   nil,   nil,    81,   nil,   nil,   nil,   nil,    77,    77,
   nil,    77,   nil,    77,    77,    77,    77,    77,    77,    77,
    80,    77,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    80,
   nil,   nil,   nil,    81,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    81,    81,   nil,    81,   nil,    81,    81,    81,    81,
    81,    81,    81,    79,    81,   nil,   nil,   nil,   nil,    80,
   nil,   nil,    79,   nil,   nil,   nil,   nil,    80,    80,   nil,
    80,   nil,    80,    80,    80,    80,    80,    80,    80,   191,
    80,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   191,   nil,
   nil,   nil,    79,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    79,    79,   nil,    79,   nil,    79,    79,    79,    79,    79,
    79,    79,    66,    79,   nil,   nil,   nil,   nil,   191,   nil,
   nil,    66,   nil,   nil,   nil,   nil,   191,   191,   nil,   191,
   nil,   191,   191,   191,   191,   191,   191,   191,   189,   191,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   189,   nil,   nil,
   nil,    66,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    66,
    66,   nil,    66,   nil,    66,    66,    66,    66,    66,    66,
    66,    70,    66,   nil,   nil,   nil,   nil,   189,   nil,   nil,
    70,   nil,   nil,   nil,   nil,   189,   189,   nil,   189,   nil,
   189,   189,   189,   189,   189,   189,   189,   nil,   189,   187,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   187,   nil,
    70,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    70,    70,
   nil,    70,   nil,    70,    70,    70,    70,    70,    70,    70,
   187,    70,    72,   nil,   nil,   nil,   nil,   187,   187,   nil,
   nil,    72,   nil,   nil,   nil,   nil,   187,   187,   nil,   187,
   nil,   187,   187,   187,   187,   187,   187,   187,    73,   187,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    73,   nil,   nil,
   nil,    72,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    72,
    72,   nil,    72,   nil,    72,    72,    72,    72,    72,    72,
    72,    78,    72,   nil,   nil,   nil,   nil,    73,   nil,   nil,
    78,   nil,   nil,   nil,   nil,    73,    73,   nil,    73,   nil,
    73,    73,    73,    73,    73,    73,    73,   nil,    73,   182,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   182,   nil,
    78,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    78,    78,
   nil,    78,   nil,    78,    78,    78,    78,    78,    78,    78,
   182,    78,   107,   nil,   nil,   nil,   nil,   182,   182,   nil,
   nil,   107,   nil,   nil,   nil,   nil,   182,   182,   nil,   182,
   nil,   182,   182,   182,   182,   182,   182,   182,   nil,   182,
   nil,   nil,   nil,   107,   nil,   nil,   nil,   nil,   nil,   nil,
   107,   107,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   107,
   107,   nil,   107,   nil,   107,   107,   107,   107,   107,   107,
   107,   nil,   107 ]

racc_action_pointer = [
    -2,   233,   nil,   nil,   nil,   224,   nil,   207,   115,   223,
    10,   201,   145,   -13,   nil,   nil,   293,   nil,   174,   -18,
   126,   -22,   -18,   459,   nil,   nil,   nil,   nil,   492,   nil,
   nil,   nil,   nil,   nil,   107,   nil,   nil,   147,   nil,   143,
   133,   129,   128,   nil,   nil,   nil,   nil,   -39,   nil,   nil,
    73,   nil,   nil,   134,   129,     1,   290,   -15,   nil,   nil,
   nil,   nil,   nil,   100,    88,   nil,   966,    86,   nil,   nil,
  1025,    -6,  1086,  1112,   nil,   110,    78,   815,  1145,   907,
   874,   848,    49,   nil,   nil,   100,    96,    80,   nil,    22,
   nil,   nil,   nil,   nil,    65,   135,    51,    18,    -9,   160,
   nil,    99,    57,   136,    97,   nil,    94,  1206,   220,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     6,    12,    17,
    22,    25,    26,   nil,    44,    57,     0,   nil,   nil,   nil,
   nil,    48,    54,    56,   nil,    24,    36,   nil,   nil,   nil,
   nil,    46,    80,   372,    39,   nil,   285,    74,   -14,    63,
   nil,   433,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    96,    95,   nil,   nil,   551,    91,   100,   nil,
   211,   nil,  1173,    79,   109,   -12,   111,  1053,   -17,   992,
   117,   933,   -27,   789,   756,   730,   697,   671,   638,   125,
   nil,   nil,   612,   579,   -13,   nil,   nil,   157,   nil,   nil,
   518,   nil,   nil,   nil,   400,   151,   121,   161,   nil,   nil,
   nil,   nil,   143,   335,   169,   313,   234,   148,   214,   nil,
   nil,   nil,   149,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   186,   192,   nil,   155,   198,   nil,   160,   162,   165,   173,
   nil,   nil,    93,   208,   nil,   550,    34,   211,   220,   214,
   221,   nil,   nil,    14,   nil,   nil,   nil,   nil,   nil,   nil,
   190,   nil,   nil ]

racc_action_default = [
  -155,  -155,    -1,    -2,    -3,    -5,   -20,  -155,  -155,  -155,
    -7,  -155,  -155,   -28,   -29,   -30,  -155,   -32,   -34,   -37,
  -149,  -116,  -119,  -155,  -121,  -122,  -123,  -124,  -155,  -126,
  -127,  -128,  -129,  -130,  -155,  -132,  -133,  -155,  -135,  -155,
  -155,  -155,  -155,  -145,  -146,  -147,  -148,  -155,  -152,  -153,
  -155,   273,    -4,  -155,  -155,  -155,  -155,   -42,   -43,   -45,
   -46,   -85,   -27,   -62,  -155,   -31,  -155,  -155,   -36,  -149,
  -155,  -155,  -155,  -155,  -120,  -155,  -155,  -155,  -155,  -155,
  -155,  -155,  -155,  -151,  -154,  -155,  -155,    -6,   -11,   -16,
   -13,   -14,   -15,   -21,  -155,  -155,  -155,  -155,  -155,  -155,
   -50,   -52,   -54,   -55,  -155,   -41,   -64,  -155,   -39,   -33,
   -35,  -114,  -115,  -117,  -118,  -125,  -131,  -155,  -155,  -155,
  -155,  -155,  -155,  -150,  -155,  -155,  -155,   -12,   -17,   -18,
   -22,  -155,   -25,  -155,   -47,  -155,  -155,   -51,   -53,   -56,
   -40,   -69,  -155,  -155,   -63,   -71,  -155,  -155,  -149,   -88,
   -90,  -155,   -93,   -94,   -95,   -96,   -98,   -99,  -100,  -101,
  -102,  -103,  -110,  -111,  -112,  -113,  -134,  -136,  -137,  -138,
  -139,  -140,  -155,  -155,   -10,   -23,  -155,  -155,   -79,   -48,
  -155,   -38,  -155,  -155,  -155,  -155,  -112,  -155,  -155,  -155,
  -155,  -155,  -155,  -155,  -155,  -155,  -155,  -155,  -155,  -155,
   -44,   -84,  -155,  -155,  -149,   -92,    -8,  -155,   -24,   -26,
  -155,   -49,   -57,   -58,  -155,  -155,   -70,   -65,   -67,   -68,
   -19,   -97,   -89,  -155,  -155,  -155,  -155,  -155,  -155,   -75,
   -76,   -81,  -155,   -83,  -104,  -105,  -106,  -107,  -108,  -109,
  -155,  -143,   -91,  -155,  -155,   -78,   -59,  -155,  -155,  -155,
   -74,   -80,  -155,  -155,   -82,  -142,  -155,  -155,  -155,  -155,
   -61,   -87,   -66,  -155,   -73,   -77,  -144,  -141,    -9,   -60,
  -155,   -72,   -86 ]

racc_goto_table = [
    68,    19,   131,    56,   144,   177,    57,   200,   240,    19,
   219,   218,   229,    93,    63,    88,   113,   114,   227,    13,
   231,    75,   234,   235,   236,   237,   238,   239,    62,    17,
   127,   109,    94,   106,   141,   181,    90,    65,   105,    87,
   185,   201,   211,   212,   213,    52,   250,   259,   110,   257,
   200,   130,   249,   260,   251,   108,   217,   116,    57,    19,
    10,     5,   266,   111,   112,     4,     3,   222,   242,   205,
   118,   119,   120,   121,   122,   219,   262,     2,    74,   216,
     1,   264,   245,   208,   200,   140,   174,   nil,   132,   nil,
   nil,   134,   271,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   253,   nil,   nil,   nil,   nil,   nil,   nil,    90,   nil,   nil,
   nil,   246,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   178,   180,   nil,   179,
    57,   nil,   nil,   nil,   nil,   nil,   186,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   132,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   241,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   178,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    75,
   nil,   178,   nil,   nil,   nil,   nil,   nil,   nil,   261,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   241,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   241,
   nil,   272 ]

racc_goto_check = [
    12,    19,    18,    15,    39,    20,    30,    13,    74,    19,
    44,    43,    49,    16,    26,     9,    62,    62,    47,    21,
    47,    19,    47,    47,    47,    47,    47,    47,    22,    23,
    11,    24,    17,    27,    28,    29,    12,    23,    12,     8,
    39,    32,    36,    37,    38,     7,    49,    40,    12,    74,
    13,    16,    47,    41,    47,    15,    42,    12,    30,    19,
     6,     5,    74,    19,    19,     4,     3,    53,    54,    55,
    19,    19,    19,    19,    19,    44,    43,     2,    65,    39,
     1,    47,    20,    18,    13,    12,     9,   nil,    19,   nil,
   nil,    30,    47,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    20,   nil,   nil,   nil,   nil,   nil,   nil,    12,   nil,   nil,
   nil,    39,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    19,    15,   nil,    30,
    30,   nil,   nil,   nil,   nil,   nil,    19,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    19,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    19,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    19,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    19,
   nil,    19,   nil,   nil,   nil,   nil,   nil,   nil,    12,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    19,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    19,
   nil,    12 ]

racc_goto_pointer = [
   nil,    80,    77,    66,    65,    61,    55,    35,   -16,   -40,
   nil,   -59,   -19,  -140,   nil,    -9,   -43,   -24,   -93,    -7,
  -128,    11,    15,    21,   -35,   nil,     1,   -30,   -72,  -106,
    -6,   nil,  -106,   nil,   nil,   nil,  -138,  -137,  -136,  -103,
  -200,  -194,  -127,  -172,  -173,   nil,   nil,  -171,   nil,  -178,
   nil,   nil,   nil,  -120,  -135,   -82,   nil,   nil,   nil,   nil,
   nil,   nil,   -56,   nil,   nil,    55,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,  -194,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   184,   nil,   nil,   nil,   nil,
    89,   nil,    35,   145,     6,   nil,   nil,   nil,   nil,   164,
   nil,   nil,   nil,   nil,    15,    18,   nil,   nil,   nil,   nil,
    36,    58,   230,    59,    60,    99,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    26,   163,   157,   146,   158,   nil,
   159,   160,   161,   149,   150,   152,   153,   154,   155,   156,
   162,   165,    21,    22,    23,    24,    25,    27,    29,    30,
    31,    32,    34,    38,   nil,    48,    49 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 69, :_reduce_none,
  1, 70, :_reduce_none,
  1, 70, :_reduce_none,
  3, 71, :_reduce_4,
  0, 74, :_reduce_none,
  3, 74, :_reduce_6,
  0, 75, :_reduce_none,
  5, 75, :_reduce_8,
  8, 75, :_reduce_9,
  3, 76, :_reduce_10,
  1, 76, :_reduce_none,
  2, 77, :_reduce_12,
  1, 78, :_reduce_none,
  1, 78, :_reduce_14,
  1, 78, :_reduce_15,
  0, 79, :_reduce_16,
  1, 79, :_reduce_17,
  1, 79, :_reduce_18,
  3, 81, :_reduce_19,
  1, 73, :_reduce_none,
  4, 72, :_reduce_21,
  5, 72, :_reduce_22,
  3, 85, :_reduce_23,
  3, 86, :_reduce_24,
  1, 86, :_reduce_none,
  4, 84, :_reduce_26,
  3, 82, :_reduce_27,
  2, 82, :_reduce_28,
  1, 91, :_reduce_29,
  1, 91, :_reduce_30,
  2, 89, :_reduce_31,
  1, 89, :_reduce_32,
  3, 92, :_reduce_33,
  1, 92, :_reduce_none,
  3, 93, :_reduce_35,
  2, 93, :_reduce_36,
  1, 93, :_reduce_none,
  4, 90, :_reduce_38,
  2, 94, :_reduce_39,
  3, 83, :_reduce_40,
  2, 83, :_reduce_41,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 100, :_reduce_none,
  1, 99, :_reduce_none,
  1, 99, :_reduce_none,
  3, 101, :_reduce_47,
  4, 101, :_reduce_48,
  5, 102, :_reduce_49,
  1, 103, :_reduce_50,
  2, 103, :_reduce_51,
  1, 103, :_reduce_52,
  2, 103, :_reduce_53,
  1, 103, :_reduce_54,
  1, 103, :_reduce_55,
  2, 103, :_reduce_56,
  1, 104, :_reduce_none,
  1, 104, :_reduce_none,
  2, 105, :_reduce_59,
  4, 106, :_reduce_60,
  1, 108, :_reduce_none,
  0, 95, :_reduce_none,
  2, 95, :_reduce_63,
  0, 96, :_reduce_none,
  3, 96, :_reduce_65,
  3, 110, :_reduce_66,
  1, 110, :_reduce_none,
  1, 111, :_reduce_none,
  0, 97, :_reduce_none,
  2, 97, :_reduce_70,
  1, 113, :_reduce_none,
  6, 114, :_reduce_72,
  5, 114, :_reduce_73,
  4, 116, :_reduce_74,
  3, 116, :_reduce_75,
  1, 117, :_reduce_none,
  3, 117, :_reduce_77,
  3, 88, :_reduce_78,
  1, 88, :_reduce_none,
  4, 118, :_reduce_80,
  3, 118, :_reduce_81,
  4, 119, :_reduce_82,
  3, 119, :_reduce_83,
  2, 120, :_reduce_84,
  1, 98, :_reduce_85,
  3, 109, :_reduce_86,
  1, 109, :_reduce_none,
  1, 107, :_reduce_none,
  3, 107, :_reduce_89,
  1, 121, :_reduce_none,
  3, 121, :_reduce_91,
  2, 122, :_reduce_92,
  1, 122, :_reduce_none,
  1, 122, :_reduce_none,
  1, 123, :_reduce_none,
  1, 125, :_reduce_none,
  3, 125, :_reduce_97,
  1, 126, :_reduce_none,
  1, 126, :_reduce_none,
  1, 126, :_reduce_none,
  1, 126, :_reduce_none,
  1, 126, :_reduce_none,
  1, 126, :_reduce_none,
  3, 127, :_reduce_104,
  3, 127, :_reduce_105,
  3, 127, :_reduce_106,
  3, 127, :_reduce_107,
  3, 127, :_reduce_108,
  3, 127, :_reduce_109,
  1, 115, :_reduce_none,
  1, 115, :_reduce_none,
  1, 128, :_reduce_none,
  1, 128, :_reduce_none,
  3, 87, :_reduce_114,
  3, 87, :_reduce_115,
  1, 87, :_reduce_none,
  3, 130, :_reduce_117,
  3, 130, :_reduce_118,
  1, 130, :_reduce_none,
  2, 131, :_reduce_120,
  1, 131, :_reduce_none,
  1, 133, :_reduce_none,
  1, 133, :_reduce_none,
  1, 133, :_reduce_none,
  3, 133, :_reduce_125,
  1, 134, :_reduce_none,
  1, 134, :_reduce_none,
  1, 136, :_reduce_none,
  1, 136, :_reduce_none,
  1, 137, :_reduce_130,
  3, 112, :_reduce_131,
  1, 112, :_reduce_none,
  1, 140, :_reduce_none,
  4, 135, :_reduce_134,
  1, 135, :_reduce_none,
  4, 141, :_reduce_136,
  4, 141, :_reduce_137,
  4, 141, :_reduce_138,
  4, 141, :_reduce_139,
  4, 141, :_reduce_140,
  4, 129, :_reduce_141,
  4, 124, :_reduce_142,
  1, 142, :_reduce_none,
  3, 142, :_reduce_144,
  1, 138, :_reduce_145,
  1, 138, :_reduce_146,
  1, 132, :_reduce_147,
  1, 132, :_reduce_148,
  1, 80, :_reduce_149,
  3, 139, :_reduce_150,
  2, 139, :_reduce_151,
  1, 139, :_reduce_none,
  1, 143, :_reduce_none,
  2, 144, :_reduce_154 ]

racc_reduce_n = 155

racc_shift_n = 273

racc_token_table = {
  false => 0,
  :error => 1,
  :ORDER => 2,
  :BY => 3,
  :FETCH => 4,
  :FIRST => 5,
  :unsigned_integer => 6,
  :ROWS => 7,
  :ONLY => 8,
  :OFFSET => 9,
  :NEXT => 10,
  :comma => 11,
  :built_in_function => 12,
  :ASC => 13,
  :DESC => 14,
  :left_paren => 15,
  :right_paren => 16,
  :INSERT => 17,
  :INTO => 18,
  :VALUES => 19,
  :SELECT => 20,
  :asterisk => 21,
  :DISTINCT => 22,
  :AS => 23,
  :FROM => 24,
  :CROSS => 25,
  :JOIN => 26,
  :INNER => 27,
  :LEFT => 28,
  :OUTER => 29,
  :RIGHT => 30,
  :FULL => 31,
  :ON => 32,
  :USING => 33,
  :WHERE => 34,
  :GROUP => 35,
  :HAVING => 36,
  :NOT => 37,
  :BETWEEN => 38,
  :AND => 39,
  :IN => 40,
  :LIKE => 41,
  :IS => 42,
  :NULL => 43,
  :EXISTS => 44,
  :identifier => 45,
  :OR => 46,
  :equals_operator => 47,
  :not_equals_operator => 48,
  :less_than_operator => 49,
  :greater_than_operator => 50,
  :less_than_or_equals_operator => 51,
  :greater_than_or_equals_operator => 52,
  :plus_sign => 53,
  :minus_sign => 54,
  :solidus => 55,
  :CURRENT_USER => 56,
  :period => 57,
  :COUNT => 58,
  :AVG => 59,
  :MAX => 60,
  :MIN => 61,
  :SUM => 62,
  :unsigned_float => 63,
  :quote => 64,
  :character_string_literal => 65,
  :DATE => 66,
  :date_string => 67 }

racc_nt_base = 68

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "ORDER",
  "BY",
  "FETCH",
  "FIRST",
  "unsigned_integer",
  "ROWS",
  "ONLY",
  "OFFSET",
  "NEXT",
  "comma",
  "built_in_function",
  "ASC",
  "DESC",
  "left_paren",
  "right_paren",
  "INSERT",
  "INTO",
  "VALUES",
  "SELECT",
  "asterisk",
  "DISTINCT",
  "AS",
  "FROM",
  "CROSS",
  "JOIN",
  "INNER",
  "LEFT",
  "OUTER",
  "RIGHT",
  "FULL",
  "ON",
  "USING",
  "WHERE",
  "GROUP",
  "HAVING",
  "NOT",
  "BETWEEN",
  "AND",
  "IN",
  "LIKE",
  "IS",
  "NULL",
  "EXISTS",
  "identifier",
  "OR",
  "equals_operator",
  "not_equals_operator",
  "less_than_operator",
  "greater_than_operator",
  "less_than_or_equals_operator",
  "greater_than_or_equals_operator",
  "plus_sign",
  "minus_sign",
  "solidus",
  "CURRENT_USER",
  "period",
  "COUNT",
  "AVG",
  "MAX",
  "MIN",
  "SUM",
  "unsigned_float",
  "quote",
  "character_string_literal",
  "DATE",
  "date_string",
  "$start",
  "direct_sql_statement",
  "direct_sql_data_statement",
  "direct_select_statement_multiple_rows",
  "insert_specification",
  "query_expression",
  "order_by_clause",
  "fetch_only_clause",
  "sort_specification_list",
  "sort_specification",
  "sort_key",
  "ordering_specification",
  "column_name",
  "subquery",
  "query_specification",
  "table_reference",
  "value_list",
  "column_list",
  "in_column_list",
  "value_expression",
  "in_value_list",
  "distinct_select_list",
  "table_expression",
  "select_list",
  "select_sublist",
  "derived_column",
  "from_clause",
  "where_clause",
  "group_by_clause",
  "having_clause",
  "table_name",
  "joined_table",
  "table_subquery",
  "cross_join",
  "qualified_join",
  "join_type",
  "join_specification",
  "join_condition",
  "named_columns_join",
  "search_condition",
  "join_column_list",
  "column_name_list",
  "grouping_column_reference_list",
  "grouping_column_reference",
  "column_reference",
  "row_subquery",
  "between_predicate",
  "row_value_constructor",
  "in_predicate",
  "in_predicate_value",
  "like_predicate",
  "null_predicate",
  "exists_predicate",
  "boolean_term",
  "boolean_factor",
  "boolean_test",
  "boolean_function",
  "boolean_primary",
  "predicate",
  "comparison_predicate",
  "row_value_constructor_element",
  "general_function",
  "term",
  "factor",
  "sign",
  "value_expression_primary",
  "unsigned_value_specification",
  "set_function_specification",
  "unsigned_literal",
  "general_value_specification",
  "unsigned_numeric_literal",
  "general_literal",
  "qualifier",
  "general_set_function",
  "argument_list",
  "datetime_literal",
  "date_literal" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

module_eval(<<'.,.,', 'parser.racc', 13)
  def _reduce_4(val, _values, result)
     result = SQLParser::Statement::DirectSelect.new(val[0], val[1], val[2]) 
    result
  end
.,.,

# reduce 5 omitted

module_eval(<<'.,.,', 'parser.racc', 18)
  def _reduce_6(val, _values, result)
     result = SQLParser::Statement::OrderBy.new(val[2]) 
    result
  end
.,.,

# reduce 7 omitted

module_eval(<<'.,.,', 'parser.racc', 22)
  def _reduce_8(val, _values, result)
     result = SQLParser::Statement::FetchOnly.new(0, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 23)
  def _reduce_9(val, _values, result)
     result = SQLParser::Statement::FetchOnly.new(val[1], val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 26)
  def _reduce_10(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 11 omitted

module_eval(<<'.,.,', 'parser.racc', 30)
  def _reduce_12(val, _values, result)
     result = val[1].new(val[0]) 
    result
  end
.,.,

# reduce 13 omitted

module_eval(<<'.,.,', 'parser.racc', 34)
  def _reduce_14(val, _values, result)
     result = SQLParser::Statement::BuiltInFunction.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 35)
  def _reduce_15(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 38)
  def _reduce_16(val, _values, result)
     result = SQLParser::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 39)
  def _reduce_17(val, _values, result)
     result = SQLParser::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 40)
  def _reduce_18(val, _values, result)
     result = SQLParser::Statement::Descending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 45)
  def _reduce_19(val, _values, result)
     result = SQLParser::Statement::Subquery.new(val[1]) 
    result
  end
.,.,

# reduce 20 omitted

module_eval(<<'.,.,', 'parser.racc', 51)
  def _reduce_21(val, _values, result)
     result = SQLParser::Statement::Insert.new(val[2], nil, val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 52)
  def _reduce_22(val, _values, result)
     result = SQLParser::Statement::Insert.new(val[2], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 55)
  def _reduce_23(val, _values, result)
     result = SQLParser::Statement::InColumnList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 58)
  def _reduce_24(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 25 omitted

module_eval(<<'.,.,', 'parser.racc', 62)
  def _reduce_26(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 65)
  def _reduce_27(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 66)
  def _reduce_28(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 69)
  def _reduce_29(val, _values, result)
     result = SQLParser::Statement::All.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 70)
  def _reduce_30(val, _values, result)
     result = SQLParser::Statement::SelectList.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 73)
  def _reduce_31(val, _values, result)
     result = SQLParser::Statement::Distinct.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 74)
  def _reduce_32(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 77)
  def _reduce_33(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 34 omitted

module_eval(<<'.,.,', 'parser.racc', 81)
  def _reduce_35(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 82)
  def _reduce_36(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 37 omitted

module_eval(<<'.,.,', 'parser.racc', 86)
  def _reduce_38(val, _values, result)
     result = SQLParser::Statement::TableExpression.new(val[0], val[1], val[2], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 89)
  def _reduce_39(val, _values, result)
     result = SQLParser::Statement::FromClause.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 92)
  def _reduce_40(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 93)
  def _reduce_41(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

module_eval(<<'.,.,', 'parser.racc', 105)
  def _reduce_47(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 106)
  def _reduce_48(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 109)
  def _reduce_49(val, _values, result)
     result = val[1].new(val[0], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 112)
  def _reduce_50(val, _values, result)
     result = SQLParser::Statement::InnerJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 113)
  def _reduce_51(val, _values, result)
     result = SQLParser::Statement::LeftOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 114)
  def _reduce_52(val, _values, result)
     result = SQLParser::Statement::LeftJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 115)
  def _reduce_53(val, _values, result)
     result = SQLParser::Statement::RightOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 116)
  def _reduce_54(val, _values, result)
     result = SQLParser::Statement::RightJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 117)
  def _reduce_55(val, _values, result)
     result = SQLParser::Statement::FullJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 118)
  def _reduce_56(val, _values, result)
     result = SQLParser::Statement::FullOuterJoin 
    result
  end
.,.,

# reduce 57 omitted

# reduce 58 omitted

module_eval(<<'.,.,', 'parser.racc', 125)
  def _reduce_59(val, _values, result)
     result = SQLParser::Statement::On.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 128)
  def _reduce_60(val, _values, result)
     result = SQLParser::Statement::Using.new(val[2]) 
    result
  end
.,.,

# reduce 61 omitted

# reduce 62 omitted

module_eval(<<'.,.,', 'parser.racc', 135)
  def _reduce_63(val, _values, result)
     result = SQLParser::Statement::WhereClause.new(val[1]) 
    result
  end
.,.,

# reduce 64 omitted

module_eval(<<'.,.,', 'parser.racc', 139)
  def _reduce_65(val, _values, result)
     result = SQLParser::Statement::GroupByClause.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 142)
  def _reduce_66(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 67 omitted

# reduce 68 omitted

# reduce 69 omitted

module_eval(<<'.,.,', 'parser.racc', 150)
  def _reduce_70(val, _values, result)
     result = SQLParser::Statement::HavingClause.new(val[1]) 
    result
  end
.,.,

# reduce 71 omitted

module_eval(<<'.,.,', 'parser.racc', 157)
  def _reduce_72(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Between.new(val[0], val[3], val[5])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 158)
  def _reduce_73(val, _values, result)
     result = SQLParser::Statement::Between.new(val[0], val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 161)
  def _reduce_74(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::In.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 162)
  def _reduce_75(val, _values, result)
     result = SQLParser::Statement::In.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 76 omitted

module_eval(<<'.,.,', 'parser.racc', 166)
  def _reduce_77(val, _values, result)
     result = SQLParser::Statement::InValueList.new(Array(val[1])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 169)
  def _reduce_78(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 79 omitted

module_eval(<<'.,.,', 'parser.racc', 176)
  def _reduce_80(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Like.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 177)
  def _reduce_81(val, _values, result)
     result = SQLParser::Statement::Like.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 180)
  def _reduce_82(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 181)
  def _reduce_83(val, _values, result)
     result = SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 184)
  def _reduce_84(val, _values, result)
     result = SQLParser::Statement::Exists.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 188)
  def _reduce_85(val, _values, result)
     result = SQLParser::Statement::Table.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 191)
  def _reduce_86(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 87 omitted

# reduce 88 omitted

module_eval(<<'.,.,', 'parser.racc', 197)
  def _reduce_89(val, _values, result)
     result = SQLParser::Statement::Or.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 90 omitted

module_eval(<<'.,.,', 'parser.racc', 202)
  def _reduce_91(val, _values, result)
     result = SQLParser::Statement::And.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 205)
  def _reduce_92(val, _values, result)
     result = SQLParser::Statement::Not.new(val[1]) 
    result
  end
.,.,

# reduce 93 omitted

# reduce 94 omitted

# reduce 95 omitted

# reduce 96 omitted

module_eval(<<'.,.,', 'parser.racc', 215)
  def _reduce_97(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 98 omitted

# reduce 99 omitted

# reduce 100 omitted

# reduce 101 omitted

# reduce 102 omitted

# reduce 103 omitted

module_eval(<<'.,.,', 'parser.racc', 227)
  def _reduce_104(val, _values, result)
     result = SQLParser::Statement::Equals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 228)
  def _reduce_105(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Equals.new(val[0], val[2])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 229)
  def _reduce_106(val, _values, result)
     result = SQLParser::Statement::Less.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 230)
  def _reduce_107(val, _values, result)
     result = SQLParser::Statement::Greater.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 231)
  def _reduce_108(val, _values, result)
     result = SQLParser::Statement::LessOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 232)
  def _reduce_109(val, _values, result)
     result = SQLParser::Statement::GreaterOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

module_eval(<<'.,.,', 'parser.racc', 245)
  def _reduce_114(val, _values, result)
     result = SQLParser::Statement::Add.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 246)
  def _reduce_115(val, _values, result)
     result = SQLParser::Statement::Subtract.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 116 omitted

module_eval(<<'.,.,', 'parser.racc', 250)
  def _reduce_117(val, _values, result)
     result = SQLParser::Statement::Multiply.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 251)
  def _reduce_118(val, _values, result)
     result = SQLParser::Statement::Divide.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 119 omitted

module_eval(<<'.,.,', 'parser.racc', 255)
  def _reduce_120(val, _values, result)
     result = val[0].new(val[1]) 
    result
  end
.,.,

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

module_eval(<<'.,.,', 'parser.racc', 262)
  def _reduce_125(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

module_eval(<<'.,.,', 'parser.racc', 273)
  def _reduce_130(val, _values, result)
     result = SQLParser::Statement::CurrentUser.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 276)
  def _reduce_131(val, _values, result)
     result = SQLParser::Statement::QualifiedColumn.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 132 omitted

# reduce 133 omitted

module_eval(<<'.,.,', 'parser.racc', 283)
  def _reduce_134(val, _values, result)
     result = SQLParser::Statement::Count.new(SQLParser::Statement::All.new) 
    result
  end
.,.,

# reduce 135 omitted

module_eval(<<'.,.,', 'parser.racc', 287)
  def _reduce_136(val, _values, result)
     result = SQLParser::Statement::Count.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 288)
  def _reduce_137(val, _values, result)
     result = SQLParser::Statement::Average.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 289)
  def _reduce_138(val, _values, result)
     result = SQLParser::Statement::Maximum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 290)
  def _reduce_139(val, _values, result)
     result = SQLParser::Statement::Minimum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 291)
  def _reduce_140(val, _values, result)
     result = SQLParser::Statement::Sum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 295)
  def _reduce_141(val, _values, result)
     result = SQLParser::Statement::FunctionCall.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 298)
  def _reduce_142(val, _values, result)
     result = SQLParser::Statement::BooleanFunction.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 143 omitted

module_eval(<<'.,.,', 'parser.racc', 302)
  def _reduce_144(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 306)
  def _reduce_145(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 307)
  def _reduce_146(val, _values, result)
    result = SQLParser::Statement::Float.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 310)
  def _reduce_147(val, _values, result)
     result = SQLParser::Statement::UnaryPlus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 311)
  def _reduce_148(val, _values, result)
     result = SQLParser::Statement::UnaryMinus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 315)
  def _reduce_149(val, _values, result)
     result = SQLParser::Statement::Column.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 319)
  def _reduce_150(val, _values, result)
     result = SQLParser::Statement::String.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 320)
  def _reduce_151(val, _values, result)
     result = SQLParser::Statement::String.new('') 
    result
  end
.,.,

# reduce 152 omitted

# reduce 153 omitted

module_eval(<<'.,.,', 'parser.racc', 327)
  def _reduce_154(val, _values, result)
     result = SQLParser::Statement::Date.new(val[1]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module SQLParser
